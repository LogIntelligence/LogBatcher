---------------------------
cluster 0: len=8
Registering class org.apache.hadoop.mapreduce.<*> for class org.apache.hadoop.mapreduce.<*> (ground truth)
Registering class <*> for class <*>: 1
---------------------------
---------------------------
cluster 1: len=39
Resolved <*> to <*> (ground truth)
Resolved <*> to <*>: 1
---------------------------
---------------------------
cluster 2: len=11
<*> Task Transitioned from NEW to SCHEDULED (ground truth)
<*> Task Transitioned from NEW to SCHEDULED: 1
---------------------------
---------------------------
cluster 3: len=14
<*> TaskAttempt Transitioned from NEW to UNASSIGNED (ground truth)
<*> TaskAttempt Transitioned from NEW to UNASSIGNED: 1
---------------------------
---------------------------
cluster 4: len=5
Before Scheduling: PendingReds:<*> ScheduledMaps:<*> ScheduledReds:<*> AssignedMaps:<*> AssignedReds:<*> CompletedMaps:<*> CompletedReds:<*> ContAlloc:<*> ContRel:<*> HostLocal:<*> RackLocal:<*> (ground truth)
Before Scheduling: PendingReds:<*> ScheduledMaps:<*> ScheduledReds:<*> AssignedMaps:<*> AssignedReds:<*> CompletedMaps:<*> CompletedReds:<*> ContAlloc:<*> ContRel:<*> HostLocal:<*> RackLocal:<*>: 1
---------------------------
---------------------------
cluster 5: len=12
getResources() for <*>: ask=<*> release= <*> newContainers=<*> finishedContainers=<*> resourcelimit=<memory:<*>, vCores:<*> knownNMs=<*> (ground truth)
getResources() for <*>: ask=<*> release=<*> newContainers=<*> finishedContainers=<*> resourcelimit=<memory:<*>, vCores:<*> knownNMs=<*>: 1
---------------------------
---------------------------
cluster 6: len=131
Recalculating schedule, headroom=<memory:<*>, vCores:<*> (ground truth)
Recalculating schedule, headroom=<memory:<*>, vCores:<*>: 3
---------------------------
---------------------------
cluster 7: len=130
Reduce slow start threshold not met. completedMapsForReduceSlowstart <*> (ground truth)
Reduce slow start threshold not met. completedMapsForReduceSlowstart <*>: 3
---------------------------
---------------------------
cluster 8: len=10
Got allocated containers <*> (ground truth)
Got allocated containers <*>: 1
---------------------------
---------------------------
cluster 9: len=10
Assigned container <*> to <*> (ground truth)
Assigned container <*> to <*>: 1
---------------------------
---------------------------
cluster 10: len=12
After Scheduling: PendingReds:<*> ScheduledMaps:<*> ScheduledReds:<*> AssignedMaps:<*> AssignedReds:<*> CompletedMaps:<*> CompletedReds:<*> ContAlloc:<*> ContRel:<*> HostLocal:<*> RackLocal:<*> (ground truth)
After Scheduling: PendingReds:<*> ScheduledMaps:<*> ScheduledReds:<*> AssignedMaps:<*> AssignedReds:<*> CompletedMaps:<*> CompletedReds:<*> ContAlloc:<*> ContRel:<*> HostLocal:<*> RackLocal:<*>: 1
---------------------------
---------------------------
cluster 11: len=10
<*> TaskAttempt Transitioned from UNASSIGNED to ASSIGNED (ground truth)
<*> TaskAttempt Transitioned from UNASSIGNED to ASSIGNED: 1
---------------------------
---------------------------
cluster 12: len=10
Processing the event EventType: <*> for container <*> taskAttempt <*> (ground truth)
Processing the event EventType: CONTAINER_REMOTE_LAUNCH for container <*> taskAttempt <*>: 1
---------------------------
---------------------------
cluster 13: len=10
Launching <*> (ground truth)
Launching <*>: 1
---------------------------
---------------------------
cluster 14: len=13
Opening proxy : <*> (ground truth)
Opening proxy : <*>: 1
---------------------------
---------------------------
cluster 15: len=10
Shuffle port returned by ContainerManager for <*> : <*> (ground truth)
Shuffle port returned by ContainerManager for <*> : <*>: 1
---------------------------
---------------------------
cluster 16: len=10
TaskAttempt: [<*>] using containerId: [<*> on NM: [<*>] (ground truth)
TaskAttempt: [<*>] using containerId: [<*> on NM: [<*>: 1
---------------------------
---------------------------
cluster 17: len=10
<*> TaskAttempt Transitioned from ASSIGNED to RUNNING (ground truth)
<*> TaskAttempt Transitioned from ASSIGNED to RUNNING: 1
---------------------------
---------------------------
cluster 18: len=10
ATTEMPT_START <*> (ground truth)
ATTEMPT_START <*>: 1
---------------------------
---------------------------
cluster 19: len=10
<*> Task Transitioned from SCHEDULED to RUNNING (ground truth)
<*> Task Transitioned from <*> to <*>: 1
---------------------------
---------------------------
cluster 20: len=10
Auth successful for <*> (auth:SIMPLE) (ground truth)
Auth successful for <*> (auth:<*>): 1
---------------------------
---------------------------
cluster 21: len=10
JVM with ID : <*> asked for a task (ground truth)
JVM with ID : <*> asked for a task: 1
---------------------------
---------------------------
cluster 22: len=10
JVM with ID: <*> given task: <*> (ground truth)
JVM with ID: <*> given task: <*>: 1
---------------------------
---------------------------
cluster 23: len=289
Progress of TaskAttempt <*> is : <*> (ground truth)
Progress of TaskAttempt <*> is : <*>: 6
---------------------------
---------------------------
cluster 24: len=476
Address change detected. Old: <*> New: <*> (ground truth)
Address change detected. Old: msra-sa-41/<*> New: msra-sa-<*>: 3
Address change detected. Old: <*>/<*> New: <*>: 4
Address change detected. Old: <*>/10.<*> New: <*>: 2
Address change detected. Old: msra-sa-41/10.<*> New: msra-sa-<*>: 1
---------------------------
---------------------------
cluster 25: len=326
Failed to renew lease for [<*>] for <*> seconds. Will retry shortly ... (ground truth)
Failed to renew lease for [DFSClient_NONMAPREDUCE_1537864556_1] for <*> seconds. Will retry shortly ...: 1
Failed to renew lease for [<*>] for <*> seconds. Will retry shortly ...: 6
---------------------------
---------------------------
cluster 26: len=147
ERROR IN CONTACTING RM. (ground truth)
ERROR IN CONTACTING RM.: 3
---------------------------
---------------------------
cluster 27: len=146
Retrying connect to server: <*>. Already tried <*> time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=<*>, sleepTime=<*> MILLISECONDS) (ground truth)
Retrying connect to server: <*>. Already tried <*> time(s); retry policy is <*>: 2
Retrying connect to server: <*>. Already tried <*> time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=<*>, sleepTime=<*> MILLISECONDS): 1
---------------------------
