Logging statement: logger.debug("printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*> t<*>}}}, allDrawn= false, startingDisplayed =  false, startingMoved =  false, isRelaunching =  false", "9f4ef63", "a64f992", "de9231d", "com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity", "761")
Logging statement: logger.debug("acquire lock=<*>, flags=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "233570404", "0x1", "View Lock", "com.android.systemui", "null", "10037", "2227")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x23", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity t<*>}}} -- going to hide", "df0798e", "78af589", "3b04890", "761")
Logging statement: logger.debug("visible is <*>", "system.time.showampm")
Logging statement: logger.debug("mVisiblity.getValue is <*>", "false")
Logging statement: logger.debug("visible is <*>", "system.charge.show")
Logging statement: logger.debug("mVisiblity.getValue is false")
Logging statement: logger.debug("visible is system.call.count gt <*>", "0")
Logging statement: logger.debug("mVisiblity.getValue is <*>", "false")
Logging statement: logger.debug("visible is system.message.count gt 0")
Logging statement: logger.debug("mVisiblity.getValue is <*>", "false")
Logging statement: logger.debug("visible is <*>", "system.ownerinfo.show")
Logging statement: logger.debug("mVisiblity.getValue is {}", "false")
Logging statement: logger.debug("release:lock=<*> flg=0x<*> tag=<*> name=<*>"", ws=<*>, uid=<*>, pid=<*>", "233570404", "0", "View Lock", "com.android.systemui", "null", "10037", "2227")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x23", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*> t<*>}}} -- going to hide", "df0798e", "78af589", "3b04890", "com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity", "761")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-24.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*>, tag=\"<*>\", name=<*>, ws=WorkSource{<*>}, uid=<*>, pid=<*>", "189667585", "0", "*launch*", "android", "10113", "1000", "1702")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x23", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("setSystemUiVisibility vis={} mask={} oldVal={} newVal={} diff={} fullscreenStackVis={} dockedStackVis={}, fullscreenStackBounds=Rect({}, {} - {}, {}), dockedStackBounds=Rect({}, {} - {}, {})", "40000500", "ffffffff", "508", "40000500", "40000008", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("cancelAutohide")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*> SystemUiVisibility=<*>", "0x40000500", "0x40000500")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>", "com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.destroyOrSaveSurface", "2201", "com.android.server.wm.WindowManagerService.tryStartExitingAnimation", "3299", "com.android.server.wm.WindowManagerService.relayoutWindow", "3179", "com.android.server.wm.Session.relayout", "215", "android.view.IWindowSession$Stub.onTransact", "286", "com.android.server.wm.Session.onTransact", "136")
Logging statement: logger.debug("release:lock=<*> flg=0x<*> tag=<*> name=<*>, ws=WorkSource{<*>}, uid=<*>, pid=<*>", "62617001", "0", "WindowManager", "android", "10113", "1000", "1702")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261843648", "0", "0x1", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("orientation change is complete, call stopFreezingDisplayLocked")
Logging statement: logger.info("Screen frozen for +<*>s<*>ms due to Window{<*> u0 <*>}", "1", "0", "ca98d5", "com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity")
Logging statement: logger.debug("startAnimation begin")
Logging statement: logger.debug("startAnimation end")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*> tag=<*> name=<*>, ws=<*>, uid=<*>, pid=<*>", "226887582", "0", "SCREEN_FROZEN", "android", "null", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> <*>}}) changed bounds; rebatching", "19abed0", "a485420 com.tencent.qt.qtl broadcastIntent")
Logging statement: logger.info("rotationForOrientationLw(orient=<*>, last=<*>); user=<*> <*>", "1", "0", "0", "USER_ROTATION_LOCKED")
Logging statement: logger.info("Application requested orientation <*>, got rotation <*> which has compatible metrics", "1", "0")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "166121161", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("getNeighboringCellInfo calling app is {}", "com.amap.android.ams")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "1", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*> tag=\"<*>\", name=<*>, ws=<*>, uid=<*>, pid=<*>", "166121161", "0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("release:lock=<*> flg=0x<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "264232593", "0", "AudioMix", "audioserver", "null", "1041", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261849942", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down<*> canceled<*>", "4", "true", "false", "2b000002", "true", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*>, result : <*>", "4", "1")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261849949", "1", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("resumeSuspendedAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>", "4", "true", "false", "2b000002", "false", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*>, result : <*>", "4", "1")
Logging statement: logger.debug("querySoundEffectsEnabled...")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "189667585", "0x1", "*launch*", "android", "WorkSource{10113}", "1000", "1702")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\"")
Logging statement: logger.debug("Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*> t<*>}}} -- going to hide", "9f4ef63", "a64f992", "de9231d", "com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity", "761")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "508", "ffffffff", "40000500", "508", "40000008", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("cancelAutohide")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "0x508", "0x508")
Logging statement: Log.w("ActivityManager", "Bad activity token: android.os.BinderProxy@<*>", "2bd79ce")
Logging statement: Log.w("ActivityManager", "java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token")
Logging statement: logger.debug("Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*> t<*>}}} -- going to hide", "9f4ef63", "a64f992", "de9231d", "com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity", "761")
Logging statement: logger.debug("release:lock=<*> flg=0x0, tag=<*>launch<*>, name=<*>android<*>, ws=WorkSource{<*>}, uid=<*>, pid=<*>", "189667585", "*", "*", "10113", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("setSystemUiVisibility vis={} mask={} oldVal={} newVal={} diff={} fullscreenStackVis={} dockedStackVis={}, fullscreenStackBounds=Rect({}, {} - {}, {}), dockedStackBounds=Rect({}, {} - {}, {})", "40000500", "ffffffff", "508", "40000500", "40000008", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("cancelAutohide")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "0x40000500", "0x40000500")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261850777", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("onTouchEvent::<*>, x=<*>, y=<*>", "0", "271.0", "14.0")
Logging statement: logger.info("schedulePeek")
Logging statement: logger.verbose("getRingtonePlayer...")
Logging statement: logger.debug("disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("updateLightsLocked, mInCall =<*> , mScreenOn = <*> , ledNotification == null?<*>", "false", "true", "true")
Logging statement: logger.info("updateLightsLocked,turn off notificationLight")
Logging statement: logger.verbose("getRingtonePlayer...")
Logging statement: logger.info("updateLightsLocked,mInCall =<*> ,mScreenOn = <*>,ledNotification == null?<*>", "false", "true", "true")
Logging statement: logger.info("updateLightsLocked,turn off notificationLight")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "196.0", "0.0", "-196.0", "4", "0", "333.0", "-529")
Logging statement: logger.info("state.clipTopAmount:<*>, i:<*>", "180", "0")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-529.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "40000600", "ffffffff", "40000500", "40000600", "300", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "0x40000600", "0x40000600")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("onExpandingStarted")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("onTrackingStarted")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*>", "com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity", "com.android.server.wm.WindowStateAnimator", "destroySurface", "2060", "com.android.server.wm.WindowStateAnimator", "destroySurfaceLocked", "913", "com.android.server.wm.WindowState", "removeLocked", "1554", "com.android.server.wm.WindowManagerService", "removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService", "removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService", "removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService", "removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService", "removeWindow", "2555")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "146.0", "0.0", "-146.0", "4", "0", "333.0", "-479")
Logging statement: logger.info("state.clipTopAmount:<*>, i:<*>", "130", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-479.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "119.0", "0.0", "-119.0", "4", "0", "333.0", "-452")
Logging statement: logger.info("state.clipTopAmount:<*> i:<*>", "103", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-452.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "85.0", "0.0", "-85.0", "4", "0", "333.0", "-418")
Logging statement: logger.info("state.clipTopAmount:<*> i:<*>", "69", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-418.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "46.0", "0.0", "-46.0", "4", "0", "333.0", "-379")
Logging statement: logger.info("state.clipTopAmount:<*> i:<*>", "30", "0")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "true", "333.0", "-379.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "5.0", "0.0", "-5.0", "4", "0", "333.0", "-338")
Logging statement: logger.info("state.clipTopAmount:<*>, i:<*>", "-1", "0")
Logging statement: logger.info("updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>", "true", "333.0", "-338.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-293.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-250.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.info("onTouchEvent::<*>, x=<*>, y=<*>", "1", "296.0", "327.0")
Logging statement: logger.info("cancelPeek: <*>", "false")
Logging statement: logger.info("flingToHeight: vel=<*> expand=<*> target=<*> collapseSpeedUpFactor=<*> expandBecauseOfFalsing=<*>", "2849.079", "true", "553.0", "1.0", "false")
Logging statement: logger.info("onTrackingStopped: <*>", "true")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-240.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-200.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-168.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-139.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-113.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-90.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-72.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-55.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-40.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-29.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-19.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-11.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-6.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-2.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-1.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("onExpandingFinished")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.warn("Sending non-protected broadcast <*.*> from system <*:* pkg <*>", "com.android.systemui.statusbar.visible.change", "2227", "com.android.systemui")
Logging statement: logger.info("logNotificationVisibilityChanges runInThread start")
Logging statement: logger.info("onNotificationVisibilityChanged called")
Logging statement: logger.info("logNotificationVisibilityChanges runInThread over")
Logging statement: logger.error("isSimPinSecure mSimDatas is null or empty")
Logging statement: logger.warn("registerCallback not in UI.")
Logging statement: logger.warn("android.util.AndroidRuntimeException: Must execute in UI")
Logging statement: logger.verbose("*** register callback for com.android.systemui.statusbar.policy.KeyguardMonitor@<*>", "712d093")
Logging statement: logger.warning("registerCallback not in UI.")
Logging statement: logger.warn("android.util.AndroidRuntimeException: Must execute in UI")
Logging statement: logger.debug("*** unregister callback for {}", "null")
Logging statement: logger.debug("[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>", "1", "1")
Logging statement: logger.debug("[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>", "1", "true")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=0x<*>, uid=<*>", "261851646", "2", "0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[0]=<*>, x[0]=<*>, y[0]=<*>, toolType[0]=<*>, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=<*>", "ACTION_DOWN", "0", "0", "317.0", "419.0", "TOOL_TYPE_FINGER", "0", "0", "0x0", "0x0", "1", "0", "261851646", "261851646", "3", "0x1002", "false")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[0]=<*>, x[0]=<*>, y[0]=<*>, toolType[0]=<*>, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=<*>", "ACTION_UP", "0", "0", "317.0", "419.0", "TOOL_TYPE_FINGER", "0", "0", "0x0", "0x0", "1", "0", "261851713", "261851646", "3", "0x1002", "false")
Logging statement: logger.verbose("playSoundEffect   effectType: <*>", "0")
Logging statement: logger.verbose("querySoundEffectsEnabled...")
Logging statement: logger.info("animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>", "2", "true", "true", "true")
Logging statement: logger.info("onExpandingStarted")
Logging statement: logger.info("logNotificationVisibilityChanges runInThread start")
Logging statement: logger.info("onNotificationVisibilityChanged called")
Logging statement: logger.info("logNotificationVisibilityChanges runInThread over")
Logging statement: logger.info("START u0 {act=<*> flg=<*> cmp=<*>} from uid <*> on display <*>", "com.tencent.mobileqq.action.MAINACTIVITY", "0x14000000", "com.tencent.mobileqq/.activity.SplashActivity (has extras)", "10111", "0")
Logging statement: logger.info("ActivityRecord info: ActivityInfo{<*}<*}<*}, euid: <*}", "d1c8e63", "com.tencent.mobileqq.activity.SplashActivity", "0")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "40000500", "ffffffff", "40000600", "40000500", "300", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*> SystemUiVisibility=<*>", "0x40000500", "0x40000500")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "189667585", "0x1", "*launch*", "android", "WorkSource{10111}", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("onNotificationClick called")
Logging statement: logger.info("cancelNotification,index:<*>", "0")
Logging statement: logger.info("cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>", "10037", "2227")
Logging statement: logger.info("cancelNotificationLocked called, tell the app, reason = <*>", "1")
Logging statement: logger.info("cancelNotificationLocked:<*>|<*>|<*>|<*>|<*>", "0", "com.tencent.mobileqq", "121", "null", "10111")
Logging statement: logger.info("cancelNotificationLocked,remove =<*>", "com.tencent.mobileqq")
Logging statement: logger.error("applyOptionsLocked: Unknown animationType=<*>", "0")
Logging statement: logger.info("cancelPeek: <*>", "false")
Logging statement: logger.info("flingToHeight: vel=<*> expand=<*> target=<*> collapseSpeedUpFactor=<*> expandBecauseOfFalsing=<*>", "0.0", "false", "0.0", "1.0", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-6.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-21.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-43.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("Taking screenshot from Surface with crop:[Rect(<*>, <*>, <*>, <*], width:[<*]], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>]", "0", "48", "720", "1208", "432", "696", "21085", "21085", "false", "0")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-70.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-102.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*> Translation=<*>", "false", "333.0", "-139.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?<*>", "false", "true", "true")
Logging statement: logger.info("updateLightsLocked, turn off notificationLight")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-178.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-222.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-270.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("removeNotification:<*>|<*>|<*>|<*>|<*>", "0", "com.tencent.mobileqq", "121", "null", "10111")
Logging statement: logger.info("updateNotificationShade: total=<*> active=<*>", "0", "0")
Logging statement: logger.info("animateCollapsePanels:flags=<*> force=<*> delayed=<*> mExpandedVisible=<*>", "0", "false", "false", "true")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "-321.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("The change in focus caused us to need to do a layout begin")
Logging statement: logger.info("The change in focus caused us to need to do a layout end")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*>", "95.0", "0.0", "-95.0", "4", "0", "333.0", "-428")
Logging statement: logger.info("state.clipTopAmount:<*> i:<*>", "79", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-428.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "508", "ffffffff", "40000500", "508", "40000008", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("cancelAutohide")
Logging statement: logger.info("notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "0x508", "0x508")
Logging statement: logger.verbose("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "508", "508", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "154.0", "0.0", "-154.0", "4", "0", "333.0", "-487")
Logging statement: logger.info("state.clipTopAmount:<*>, i:<*>", "138", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-487.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("overlapAmount:<*> previousNotificationEnd:<*> newYTranslation:<*> location:<*> i:<*> getTopPadding:<*> getLocationOnScreen():<*>", "213.0", "0.0", "-213.0", "4", "0", "333.0", "-546")
Logging statement: logger.info("state.clipTopAmount:<*>, i:<*>", "197", "0")
Logging statement: logger.info("updateClipping isOverlap:<*> getTopPadding=<*> Translation=<*>", "true", "333.0", "-546.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "true")
Logging statement: logger.info("updateNotificationShade: total=<*> active=<*>", "0", "0")
Logging statement: logger.info("removeNotificationChildren")
Logging statement: logger.info("onExpandingFinished")
Logging statement: logger.info("updateNotificationShade: total=<*> active=<*>", "0", "0")
Logging statement: logger.info("removeNotificationChildren")
Logging statement: logger.warn("Sending non-protected broadcast <*> from system <*>:<*> pkg <*>", "com.android.systemui.statusbar.visible.change", "2227", "com.android.systemui")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.debug("Skipping, withExcluded: <*>, tr.intent:Intent { flg=0x<*> cmp=<*> bnds=[<*>,<*>][<*>,<*>] }", "false", "10804000", "com.android.systemui/.recents.RecentsActivity", "264", "444", "920", "908")
Logging statement: logger.debug("Skipping, withExcluded: <*>, tr.intent:<*>", "false", "Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }")
Logging statement: logger.debug("Skipping, withExcluded: <*> tr.intent:Intent { flg=<*> cmp=<*> (has extras) }", "false", "0x18800000", "com.tencent.mm/.plugin.base.stub.WXEntryActivity")
Logging statement: logger.debug("Skipping, withExcluded: <*> tr.intent:Intent { flg=0x<*>, cmp=<*> (has extras) }", "false", "10800000", "com.tencent.qqmusic/.business.lockscreen.LockScreenActivity")
Logging statement: logger.debug("Skipping, withExcluded: <*> tr.intent:Intent { act=<*> dat=tel:<*> flg=<*> cmp=<*> (has extras) }", "false", "com.android.contacts.action.CHOOSE_SUB", "xxxxxxxxxxx", "0x10808000", "com.android.contacts/.ChooseSubActivity")
Logging statement: logger.debug("Skipping, withExcluded: <*> tr.intent:Intent { act=<*> dat=<*> typ=<*> flg=<*> cmp=<*> (has extras) }", "false", "android.intent.action.VIEW", "file:///storage/emulated/0/Tencent/QQfile_recv/b.apk", "application/vnd.android.package-archive", "0x10800000", "com.android.packageinstaller/.PackageInstallerActivity")
Logging statement: logger.debug("getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>", "20", "62", "46")
Logging statement: logger.debug("getRecentTasks: topActivity=<*>", "ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Skipping, withExcluded: <*>, tr.intent:Intent { flg=0x<*>, cmp=<*> bnds=[<*>,<*>][<*>,<*>]}", "false", "10804000", "com.android.systemui/.recents.RecentsActivity", "264", "444", "920", "908")
Logging statement: logger.debug("Skipping, withExcluded: <*>, tr.intent:<*>", "false", "Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }")
Logging statement: logger.debug("Skipping, withExcluded: <*> tr.intent:Intent { flg=0x<*> cmp=<*> (has extras) }", "false", "18800000", "com.tencent.mm/.plugin.base.stub.WXEntryActivity")
Logging statement: logger.debug("getRecentTasks: num=<*> flags=<*> totalTasks=<*>", "10", "62", "46")
Logging statement: logger.debug("getRecentTasks: topActivity=ComponentInfo{<*>/<*>.<*>}", "com.tencent.mobileqq", "com.tencent.mobileqq.activity", "SplashActivity")
Logging statement: logger.info("cancelNotificationWithTag pid=<*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>", "28601", "10111", "null", "com.tencent.mobileqq", "121")
Logging statement: logger.info("cancelNotification,index:<*>", -1)
Logging statement: logger.info("cancelNotificationWithTag pid <*> uid = <*>,tag = <*>,pkg =<*>,id =<*>" "28601", "10111", "null", "com.tencent.mobileqq", "119")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotificationWithTag pid=<*>, uid=<*>, tag=<*>, pkg=<*>, id=<*>", "28601", "10111", "null", "com.tencent.mobileqq", "122")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "508", "508", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: Log.i("setSystemUiVisibility vis=%s mask=%s oldVal=%s newVal=%s diff=%s fullscreenStackVis=%s dockedStackVis=%s, fullscreenStackBounds=Rect(%s, %s - %s, %s), dockedStackBounds=Rect(%s, %s - %s, %s)", "40000500", "ffffffff", "508", "40000500", "40000008", "0", "0", "0", "0", "720", "1280", "0", "0", "0", "0")
Logging statement: logger.info("cancelAutohide")
Logging statement: logger.info("notifyUiVisibilityChanged: vis=<*>, SystemUiVisibility=<*>", "0x40000500", "0x40000500")
Logging statement: logger.debug("makeExpandedInvisible: mExpandedVisible=<*>", "true")
Logging statement: logger.info("closeQs")
Logging statement: logger.info("cancelPeek: <*>", "false")
Logging statement: logger.info("instantCollapse")
Logging statement: logger.info("cancelPeek: <*>", "false")
Logging statement: logger.info("closeQs")
Logging statement: logger.info("resumeSuspendedAutohide")
Logging statement: logger.debug("disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >")
Logging statement: logger.info("cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>", "28601", "10111", "null", "com.tencent.mobileqq", "123")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*>, tag=<*>, name=<*>, ws=WorkSource{<*>}, uid=<*>, pid=<*>", "189667585", "0", "*launch*", "android", "10111", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("cancelNotificationWithTag pid <*> uid = <*>, tag = <*>, pkg =<*>, id =<*>", "28601", "10111", "null", "com.tencent.mobileqq", "129")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotificationWithTag pid=<*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>", "28601", "10111", "null", "com.tencent.mobileqq", "135")
Logging statement: 
```java
logger.info("cancelNotificationWithTag pid = <*>, uid = <*>, tag = <*>, pkg = <*>, id = <*>", "28601", "10111", "null", "com.tencent.mobileqq", "140");
```
Logging statement: logger.info("cancelNotificationWithTag pid=<*>, uid=<*>, tag=<*>, pkg=<*>, id=<*>", "28601", "10111", "null", "com.tencent.mobileqq", "144")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.info("cancelNotificationWithTag pid <*>, uid = <*>, tag = <*>, pkg = <*>, id = <*>", "28601", "10111", "null", "com.tencent.mobileqq", "193")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warn("registerCallback not in UI.")
Logging statement: logger.warn("android.util.AndroidRuntimeException: Must execute in UI")
Logging statement: logger.debug("*** unregister callback for <*><*>", "com.android.systemui.statusbar.policy.KeyguardMonitor", "712d093")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by com.android.server.wm.WindowStateAnimator.destroySurface:<*> com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:<*> com.android.server.wm.WindowState.destroyOrSaveSurface:<*> com.android.server.wm.AppWindowToken.destroySurfaces:<*> com.android.server.wm.AppWindowToken.notifyAppStopped:<*> com.android.server.wm.WindowManagerService.notifyAppStopped:<*> com.android.server.am.ActivityStack.activityStoppedLocked:<*> com.android.server.am.ActivityManagerService.activityStopped:<*>", "com.tencent.qt.qtl/com.tencent.qt.qtl.activity.main.MainTabActivity", "2060", "913", "2201", "374", "400", "4869", "1393", "7690")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.verbose("isMusicActive...")
Logging statement: logger.info("Start dump, calling from : pid=<*> , uid=<*>", "12782", "1000")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "237091223", "0x1", "WiredAccessoryManager", "android", "null", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.verbose("setWiredDeviceConnectionState  type: <*>  state: <*>" , "-2147483632", "0")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "86152250", "0x1", "handleAudioEvent", "android", "null", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setWiredDeviceConnectionState  type: <*>  state: <*>", "4", "0")
Logging statement: logger.debug("release:lock=<*>, flg=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "237091223", "0x0", "WiredAccessoryManager", "android", "null", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.debug("ActivityManagerService,attachApplication,callingPid = <*>, 12787")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>, 38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("acquire lock=<*>, flags=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "219829192", "0x1", "AudioMix", "audioserver", "null", "1041", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("release:lock=<*> flg=0x0, tag=<*> name=<*>, ws=<*>, uid=<*>, pid=<*>", "86152250", "handleAudioEvent", "android", "null", "1000", "1702")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("isBluetoothA2dpOn...")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.verbose("isBluetoothScoOn...")
Logging statement: logger.verbose("getLastAudibleStreamVolume  treamType: <*>", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("cancelNotification,index:<*>", "-1")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.debug("getLastAudibleStreamVolume streamType: <*>", 1)
Logging statement: logger.verbose("getLastAudibleStreamVolume  treamType: <*>", "2")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("getDevicesForStream streamType: <*>", 3)
Logging statement: logger.debug("getLastAudibleStreamVolume  treamType: <*>, 3")
Logging statement: logger.verbose("getDevicesForStream streamType: <*>", 3)
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.verbose("getLastAudibleStreamVolume  treamType: <*>", "4")
Logging statement: logger.verbose("getLastAudibleStreamVolume treamType: <*>", "5")
Logging statement: logger.verbose("getLastAudibleStreamVolume  treamType: <*>", "6")
Logging statement: logger.debug("getLastAudibleStreamVolume streamType: <*>", "7")
Logging statement: logger.verbose("getLastAudibleStreamVolume  treamType: <*>", "8")
Logging statement: logger.debug("cleanUpApplicationRecord -- <*>", "12025")
Logging statement: logger.info("cleanUpApplicationRecordLocked, pid: <*>, restart: <*>", "12025", "false")
Logging statement: logger.info("cleanUpApplicationRecordLocked, reset pid: <*> euid: <*>", "12025", "0")
Logging statement: logger.info("stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "false")
Logging statement: logger.info("stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "0")
Logging statement: logger.verbose("getMode...")
Logging statement: logger.debug("setSpeakerphoneOn on: <*>", "true")
Logging statement: logger.info("setSpeakerphoneOn on:<*>", "true")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.info("HBM brightnessIn =<*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", 38)
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.debug("release:lock=<*> flg=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "219829192", "0x0", "AudioMix", "audioserver", "null", "1041", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =<*>", "aa90550", "3", "509142332", "1749923", "9600e20", "0", "time_tick")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.verbose("Received TIME_TICK alarm; rescheduling")
Logging statement: logger.info("scheduleTimeTickEvent triggerAtTime = <*>" , "509202333")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap:<*>", "false")
Logging statement: logger.debug("received broadcast <*>", "android.intent.action.TIME_TICK")
Logging statement: logger.debug("handleTimeUpdate")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261866434", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261867236", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261867854", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261868506", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("playSoundEffect effectType: <*>", "0")
Logging statement: logger.verbose("querySoundEffectsEnabled...")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold <*>; limiting output", "10111", "REAL_GET_TASKS")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>", "PopupWindow:9b04807", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>, <*>.<*>", "PopupWindow:317e46", "com.android.server.wm.WindowStateAnimator", "destroySurface", "2060", "com.android.server.wm.WindowStateAnimator", "destroySurfaceLocked", "913", "com.android.server.wm.WindowState", "removeLocked", "1554", "com.android.server.wm.WindowManagerService", "removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService", "removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService", "removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService", "removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService", "removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: Log.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261870094", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261870612", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>", "PopupWindow:d76a91d", "com.android.server.wm.WindowStateAnimator.destroySurface:2060")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>", "PopupWindow:9b04807", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", 38, 200)
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261871547", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*> event=<*> flags=<*> uid=<*>", "261872249", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=0x<*>, uasummary=0x<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "60373518", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "1", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261872817", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("getNeighboringCellInfo calling app is <*>", "com.amap.android.ams")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*> tag="<*>" name=<*>" ws=<*>, uid=<*>, pid=<*>", "60373518", "0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warning("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true","3","1","0x0","0x1","true","false","false","false","38","-1","0.0","0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"%s\".", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261874138", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: Log.w("ActivityManager", "getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261875239", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261879585", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>:<*> <*:*> <*:*>:<*> <*:*>:<*> <*:*>:<*> <*:*>:<*>", "PopupWindow:d76a91d", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*:<*> <*:<*> <*:<*> <*:<*> <*:<*> <*:<*> <*:<*> <*:<*>", "PopupWindow:9b04807", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>" , "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261880856", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261881405", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261883596", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn = <*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261884464", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261885300", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261885816", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.verbose("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.verbose("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261886520", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261887070", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("playSoundEffect effectType: <*>", "0")
Logging statement: logger.verbose("querySoundEffectsEnabled...")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>", "PopupWindow:9b04807", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>", "PopupWindow:317e46", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(<*>)", "true")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("HBM brightnessIn =<*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.verbose("isMusicActive...")
Logging statement: logger.info("sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> <*>}}},repeatInterval = <*>,listenerTag =<*>", "19069ff", "3", "509169377", "50303cc", "e204f60", "0", "null")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "1", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("Killing <*>:<*> (adj <*>) for <*>s", "23484", "com.android.calendar/u0a13", "906", "1810")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.info("stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "false")
Logging statement: logger.info("stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "0")
Logging statement: logger.debug("cleanUpApplicationRecord -- <*>", "5784")
Logging statement: logger.info("cleanUpApplicationRecordLocked, pid: <*> restart: <*>", "5784", "false")
Logging statement: logger.info("cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>", "5784", "0")
Logging statement: logger.info("stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "false")
Logging statement: logger.info("stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "0")
Logging statement: logger.debug("cleanUpApplicationRecord -- <*>", "23484")
Logging statement: logger.info("cleanUpApplicationRecordLocked, pid: <*>, restart: <*>", "23484", "false")
Logging statement: logger.info("cleanUpApplicationRecordLocked, reset pid: <*> euid: <*>", "23484", "0")
Logging statement: logger.info("stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "false")
Logging statement: logger.info("stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "0")
Logging statement: logger.debug("cleanUpApplicationRecord -- <*>", "5769")
Logging statement: logger.info("cleanUpApplicationRecordLocked, pid: <*> restart: <*>", "5769", "false")
Logging statement: logger.info("cleanUpApplicationRecordLocked, reset pid: <*> euid: <*>", "5769", "0")
Logging statement: logger.info("HBM brightnessIn = <*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", 38)
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warning("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("HBM brightnessIn =<*>)", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut = <*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.info("HBM brightnessIn =<*>", 38)
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.verbose("isMusicActive...")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut = <*>", 38)
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.verbose("isMusicActive...")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>" , "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =<*>", "c1705d3", "3", "509202333", "1749923", "9600e20", "0", "time_tick")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("Received TIME_TICK alarm; rescheduling")
Logging statement: logger.info("scheduleTimeTickEvent triggerAtTime = <*>", "509262332")
Logging statement: logger.info("updateClipping isOverlap=<*> getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.info("updateClipping isOverlap=<*>, getTopPadding=<*>, Translation=<*>", "false", "333.0", "0.0")
Logging statement: logger.info("updateDimmedActivatedHideSensitive overlap=<*>", "false")
Logging statement: logger.debug("received broadcast android.intent.action.TIME_TICK")
Logging statement: logger.debug("handleTimeUpdate")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "134680583", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.info("remove(PendingIntent{<*>: PendingIntentRecord{<*> <*>}}) changed bounds; rebatching", "e4e2534", "e204f60", "com.android.phone broadcastIntent")
Logging statement: 
```java
logger.debug("release:lock=<*>, flg=0x<*> tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "134680583", "0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
```
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "134680583", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true","3","1","0x1","0x1","true","false","false","false","38","-1","0.0","0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "134680583", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>policy=<*>wakefulness=<*>wksummary=<*>uasummary=<*>bootcompleted=<*>boostinprogress=<*>waitmodeenable=<*>mode=<*>manual=<*>auto=<*>adj=<*>userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warning("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("release:lock=<*> flg=0x<*> tag=\"<*>\", name=<*>\", ws=<*>, uid=<*>, pid=<*>", "134680583", "0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("getNeighboringCellInfo calling app is {}", "com.amap.android.ams")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>",
"true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found", "com.tencent.android.tpush.action.keepalive", "com.qqgame.hlddz/com.tencent.android.tpush.service.XGPushService", "0")
Logging statement: logger.debug("ready=<*> policy=<*> wakefulness=<*> wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10091")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "120758482", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("release:lock=<*>, flg=0x<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "120758482", "0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "120758482", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "0", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("acquire lock=<*> flags=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "120758482", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>","true","3","1","0x1","0x1","true","false","false","false","38","-1","0.0","0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=0x<*>, uasummary=0x<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "1", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warning("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("getNeighboringCellInfo calling app is {}", "com.amap.android.ams")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("release:lock=<*>, flg=<*>, tag=<*>, name=<*>, ws=<*>, uid=<*>, pid=<*>", "120758482", "0x0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.warning("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "120758482", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\"")
Logging statement: logger.debug("acquire lock=<*> flags=<*> tag=<*> name=<*> ws=<*> uid=<*> pid=<*>", "120758482", "0x1", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.warning("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("release:lock=<*>, flg=<*>, tag=\"<*>\", name=<*>\", ws=<*>, uid=<*>, pid=<*>", "120758482", "0x0", "RILJ_ACK_WL", "com.android.phone", "null", "1001", "2626")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>.<*>", "PowerManagerService", "WakeLocks")
Logging statement: logger.debug("getNeighboringCellInfo calling app is {}", "com.amap.android.ams")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x1", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Acquiring suspend blocker \"PowerManagerService.WakeLocks\".")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=0x<*>, uasummary=0x<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("Releasing suspend blocker <*>", "PowerManagerService.WakeLocks")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation  ret:<*>", "false")
Logging statement: logger.warn("shouldBlockLocation running ...")
Logging statement: logger.info("shouldBlockLocation ret:<*>", "false")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>" , "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.verbose("unregisterAudioFocusListener...")
Logging statement: logger.info("abandonAudioFocus")
Logging statement: logger.info("[HSM] stayAwake false uid: <*> pid: <*>, "10111", "28601")
Logging statement: logger.info("Pid:<*> MediaPlayer destructor", "28601")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "false")
Logging statement: logger.info("stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "0")
Logging statement: logger.info("Process <*> (pid <*>) has died", "com.tencent.mobileqq:qzone", "12236")
Logging statement: logger.debug("cleanUpApplicationRecord -- <*>", "12236")
Logging statement: logger.warn("Scheduling restart of crashed service <*> in <*>ms", "com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService", "1000")
Logging statement: logger.info("cleanUpApplicationRecordLocked, pid: <%>, restart: <%>", "12236", "false")
Logging statement: logger.info("cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>", "12236", "0")
Logging statement: logger.warning("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*>, rate=<*>", "38", "200")
Logging statement: logger.info("new Process app=ProcessRecord{<*> 0:<*><*>}, name: <*>, euid: <*>", "6eaaf00", "com.tencent.mobileqq:qzone/u0a111", "com.tencent.mobileqq:qzone", "0")
Logging statement: logger.info("Start proc <*>:<*>:<*> for service <*>/<*>", "13003", "com.tencent.mobileqq:qzone/u0a111", "com.tencent.mobileqq", "cooperation.qzone.remote.logic.QzoneWebPluginProxyService")
Logging statement: logger.debug("ActivityManagerService,attachApplication,callingPid = <*>", "13003")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut = <*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warning("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10113")
Logging statement: logger.info("HBM brightnessIn =<*>", "38")
Logging statement: logger.info("HBM brightnessOut =<*>", "38")
Logging statement: logger.debug("Animating brightness: target=<*> rate=<*>", "38", "200")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.warn("getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "10111")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261949797", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down<*> canceled<*>", "4", "true", "false", "2b000002", "true", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*>, result : <*>", "4", "1")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261949805", "1", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>,userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("Destroying surface Surface(name=<*>) called by <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*>", "PopupWindow:317e46", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.removeLocked", "1554", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2739", "com.android.server.wm.WindowManagerService.removeWindowInnerLocked", "2702", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2691", "com.android.server.wm.WindowManagerService.removeWindowLocked", "2560", "com.android.server.wm.WindowManagerService.removeWindow", "2555")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("resumeSuspendedAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down<*> canceled<*>", "4", "true", "false", "2b000002", "false", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*> , result : <*>", "4", "1")
Logging statement: logger.debug("querySoundEffectsEnabled...")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: 
```java
logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0");
```
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("Destroying surface Surface(name=InputMethod) called by <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*> <*>.<*>:<*>", "com.android.server.wm.WindowStateAnimator.destroySurface", "2060", "com.android.server.wm.WindowStateAnimator.destroySurfaceLocked", "913", "com.android.server.wm.WindowState.destroyOrSaveSurface", "2201", "com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementInner", "517", "com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementLoop", "291", "com.android.server.wm.WindowSurfacePlacer.performSurfacePlacement", "233", "com.android.server.wm.WindowManagerService$H.handleMessage", "8670", "android.os.Handler.dispatchMessage", "105")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*>, interactive=<*>, keyguardActive=<*>, policyFlags=<*>, down=<*>, canceled=<*>", "4", "true", "false", "2b000002", "true", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*> , result : <*>", "4", "1")
Logging statement: logger.debug("setLightsOn(true)")
Logging statement: logger.info("setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)", "0", "1", "40000500", "40000500", "0", "0", "0", "0", "0", "0")
Logging statement: logger.info("resumeSuspendedAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down=<*> canceled=<*>", "4", "true", "false", "2b000002", "false", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*> , result : <*>", "4", "1")
Logging statement: logger.verbose("querySoundEffectsEnabled...")
Logging statement: logger.debug("isMusicActive...")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*> event=<*> flags=<*> uid=<*>", "261950783", "2", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=0x<*>,uasummary=0x<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0", "1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("suspendAutohide")
Logging statement: logger.debug("interceptKeyTq keycode=<*>, interactive=<*>, keyguardActive=<*>, policyFlags=<*>, down=<*>, canceled=<*>", "3", "true", "false", "2b000002", "true", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*> , result : <*>", "3", "1")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261950787", "1", "0x0", "1000")
Logging statement: logger.debug("ready=<*>, policy=<*>, wakefulness=<*>, wksummary=<*>, uasummary=<*>, bootcompleted=<*>, boostinprogress=<*>, waitmodeenable=<*>, mode=<*>, manual=<*>, auto=<*>, adj=<*>, userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.info("resumeSuspendedAutohide")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261950887", "0", "0x0", "1000")
Logging statement: logger.debug("ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>userId=<*>", "true", "3", "1", "0x0", "0x1", "true", "false", "false", "false", "38", "-1", "0.0", "0")
Logging statement: logger.debug("interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down<*> canceled<*>", "3", "true", "false", "2b000002", "false", "false")
Logging statement: logger.debug("interceptKeyBeforeQueueing: key <*> , result : <*>", "3", "1")
Logging statement: logger.debug("querySoundEffectsEnabled...")
Logging statement: logger.debug("userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "261950909", "0", "0x0", "1000")
