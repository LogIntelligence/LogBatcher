---------------------------
cluster 1: len=5
mVisiblity.getValue is <*> (ground truth)
<*> (final_template)
<*>: 1
---------------------------
---------------------------
cluster 10: len=6
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*> (ground truth)
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*> (final_template)
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>: 1
---------------------------
---------------------------
cluster 15: len=1
visible is <*> (ground truth)
visible is <*> (final_template)
visible is <*>: 1
---------------------------
---------------------------
cluster 2: len=19
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*> (ground truth)
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*> (final_template)
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>: 1
---------------------------
---------------------------
cluster 6: len=5
shouldBlockLocation ret:<*> (ground truth)
shouldBlockLocation ret:<*> (final_template)
shouldBlockLocation ret:<*>: 1
---------------------------
---------------------------
cluster 13: len=1
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (final_template)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 3: len=19
updateDimmedActivatedHideSensitive overlap:<*> (ground truth)
updateDimmedActivatedHideSensitive overlap:<*> (final_template)
updateDimmedActivatedHideSensitive overlap:<*>: 1
---------------------------
---------------------------
cluster 8: len=6
overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*> (ground truth)
overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*> (final_template)
overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*>: 1
---------------------------
---------------------------
cluster 17: len=1
visible is <*> gt <*> (ground truth)
visible is system.call.count gt <*> (final_template)
visible is system.call.count gt <*>: 1
---------------------------
---------------------------
cluster 12: len=1
printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*> (ground truth)
opening app wtoken = <*>}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*> (final_template)
opening app wtoken = <*>}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*>: 1
---------------------------
---------------------------
cluster 21: len=2
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output (ground truth)
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output (final_template)
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output: 1
---------------------------
---------------------------
cluster 11: len=6
updateDimmedActivatedHideSensitive overlap:<*> (ground truth)
updateDimmedActivatedHideSensitive overlap:<*> (final_template)
updateDimmedActivatedHideSensitive overlap:<*>: 1
---------------------------
---------------------------
cluster 16: len=1
visible is <*> (ground truth)
visible is <*> (final_template)
visible is <*>: 1
---------------------------
---------------------------
cluster 4: len=6
release:lock=<*>, flg=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*> (final_template)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 19: len=1
visible is <*> (ground truth)
visible is <*> (final_template)
visible is <*>: 1
---------------------------
---------------------------
cluster 5: len=5
shouldBlockLocation running ... (ground truth)
shouldBlockLocation running ... (final_template)
shouldBlockLocation running ...: 1
---------------------------
---------------------------
cluster 9: len=5
state.clipTopAmount:<*>, i:<*> (ground truth)
state.clipTopAmount:<*>, i:<*> (final_template)
state.clipTopAmount:<*>, i:<*>: 1
---------------------------
---------------------------
cluster 18: len=1
visible is <*> gt <*> (ground truth)
visible is <*> gt <*> (final_template)
visible is <*> gt <*>: 1
---------------------------
---------------------------
cluster 0: len=24
ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=<*>,adj=<*>.0userId=<*> (ground truth)
ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=-<*>,adj=<*>.0userId=<*> (final_template)
ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>: 1
---------------------------
---------------------------
cluster 14: len=4
Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>}}} -- going to hide (ground truth)
Skipping AppWindowToken{ <*> token=<*> <*> u0 <*> <*> }}}}} -- going to hide (final_template)
Skipping AppWindowToken{ <*> token=<*> <*> u0 <*> <*> }}}}} -- going to hide: 1
---------------------------
---------------------------
cluster 30: len=1
startAnimation begin (ground truth)
startAnimation <*> (final_template)
startAnimation <*>: 1
---------------------------
---------------------------
cluster 27: len=4
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*> (ground truth)
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*> (final_template)
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>: 1
---------------------------
---------------------------
cluster 29: len=1
Screen frozen for <*> due to Window{<*> u0 <*>} (ground truth)
Screen frozen for +<*> due to <*> (final_template)
Screen frozen for +<*> due to <*>: 1
---------------------------
---------------------------
cluster 32: len=1
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching (ground truth)
remove(<*>: <*> <*> <*>) (final_template)
remove(<*>: <*> <*> <*>): 1
---------------------------
---------------------------
cluster 37: len=2
Releasing suspend blocker "PowerManagerService.WakeLocks". (ground truth)
Releasing suspend blocker "<*>". (final_template)
Releasing suspend blocker "<*>".: 1
---------------------------
---------------------------
cluster 36: len=1
getNeighboringCellInfo calling app is <*> (ground truth)
getNeighboringCellInfo calling app is <*> (final_template)
getNeighboringCellInfo calling app is <*>: 1
---------------------------
---------------------------
cluster 33: len=1
rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED (ground truth)
rotationForOrientationLw(orient=<*>, last=<*>); user=<*> <*> (final_template)
rotationForOrientationLw(orient=<*>, last=<*>); user=<*> <*>: 1
---------------------------
---------------------------
cluster 20: len=1
release:lock=<*>, flg=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*> (final_template)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 24: len=4
notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*> (ground truth)
notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*> (final_template)
notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>: 1
---------------------------
---------------------------
cluster 39: len=1
HBM brightnessOut =<*> (ground truth)
HBM brightnessOut =<*> (final_template)
HBM brightnessOut =<*>: 1
---------------------------
---------------------------
cluster 22: len=4
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>) (ground truth)
setSystemUiVisibility vis=<*> mask=ffffffff oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>) (final_template)
setSystemUiVisibility vis=<*> mask=ffffffff oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>): 1
---------------------------
---------------------------
cluster 28: len=1
orientation change is complete, call stopFreezingDisplayLocked (ground truth)
<*> is complete, call <*> (final_template)
<*> is complete, call <*>: 1
---------------------------
---------------------------
cluster 41: len=1
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*> (ground truth)
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*> (final_template)
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>: 1
---------------------------
---------------------------
cluster 25: len=1
Destroying surface Surface(name=<*>) called by <*> (ground truth)
Destroying surface Surface(name=<*>) called by <*> <*> <*> android.view.IWindowSession$Stub.onTransact:<*> <*> android.os.Binder.execTransact:<*> <bottom of call stack> <bottom of call stack> (final_template)
Destroying surface Surface(name=<*>) called by <*> <*> <*> android.view.IWindowSession$Stub.onTransact:<*> <*> android.os.Binder.execTransact:<*> <bottom of call stack> <bottom of call stack>: 1
---------------------------
---------------------------
cluster 34: len=1
Application requested orientation <*>, got rotation <*> which has compatible metrics (ground truth)
Application requested orientation <*>, got rotation <*> which has compatible metrics (final_template)
Application requested orientation <*>, got rotation <*> which has compatible metrics: 1
---------------------------
---------------------------
cluster 31: len=1
startAnimation end (ground truth)
<*> <*> (final_template)
<*> <*>: 1
---------------------------
---------------------------
cluster 42: len=2
interceptKeyBeforeQueueing: key <*> , result : <*> (ground truth)
interceptKeyBeforeQueueing: key <*> , result : <*> (final_template)
interceptKeyBeforeQueueing: key <*> , result : <*>: 1
---------------------------
---------------------------
cluster 40: len=1
Animating brightness: target=<*>, rate=<*> (ground truth)
Animating brightness: target=<*>, rate=<*> (final_template)
Animating brightness: target=<*>, rate=<*>: 1
---------------------------
---------------------------
cluster 46: len=1
Acquiring suspend blocker "PowerManagerService.WakeLocks". (ground truth)
 (final_template)
---------------------------
---------------------------
cluster 44: len=1
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*> (ground truth)
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*> (final_template)
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>: 1
---------------------------
---------------------------
cluster 26: len=2
Destroying surface Surface(name=<*>) called by <*> (ground truth)
Destroying surface Surface(name=<*>) called by <*> (final_template)
Destroying surface Surface(name=<*>) called by <*>: 1
---------------------------
---------------------------
cluster 48: len=1
<*>: <*> cannot be cast to <*>$Token (ground truth)
java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token (final_template)
java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token: 1
---------------------------
---------------------------
cluster 53: len=2
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?true (ground truth)
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?true (final_template)
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?true: 1
---------------------------
---------------------------
cluster 58: len=1
cancelPeek: <*> (ground truth)
cancelPeek: <*> (final_template)
cancelPeek: <*>: 1
---------------------------
---------------------------
cluster 35: len=2
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (final_template)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 62: len=1
Sending non-protected broadcast <*> from system <*> pkg <*> (ground truth)
Sending non-protected broadcast <*> from system <*> pkg <*> (final_template)
Sending non-protected broadcast <*> from system <*> pkg <*>: 1
---------------------------
---------------------------
cluster 67: len=1
registerCallback not in UI. (ground truth)
registerCallback not in <*>. (final_template)
registerCallback not in <*>.: 1
---------------------------
---------------------------
cluster 60: len=1
onTrackingStopped: <*> (ground truth)
onTrackingStopped: <*> (final_template)
onTrackingStopped: <*>: 1
---------------------------
---------------------------
cluster 47: len=1
Bad activity token: <*>@<*> (ground truth)
Bad activity token: <*> (final_template)
Bad activity token: <*>: 1
---------------------------
---------------------------
cluster 59: len=1
flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> (ground truth)
flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> (final_template)
flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>: 1
---------------------------
---------------------------
cluster 54: len=2
updateLightsLocked,turn off notificationLight (ground truth)
updateLightsLocked,turn off <*> (final_template)
updateLightsLocked,turn off <*>: 1
---------------------------
---------------------------
cluster 49: len=2
onTouchEvent::<*>, x=<*>, y=<*> (ground truth)
onTouchEvent::<*>, x=<*>, y=<*> (final_template)
onTouchEvent::<*>, x=<*>, y=<*>: 1
---------------------------
---------------------------
cluster 63: len=1
logNotificationVisibilityChanges runInThread start (ground truth)
<*> runInThread start (final_template)
<*> runInThread start: 1
---------------------------
---------------------------
cluster 64: len=1
onNotificationVisibilityChanged called (ground truth)
onNotificationVisibilityChanged called (final_template)
onNotificationVisibilityChanged called: 1
---------------------------
---------------------------
cluster 57: len=1
state.clipTopAmount:<*>, i:<*> (ground truth)
state.clipTopAmount:<*>, i:<*> (final_template)
state.clipTopAmount:<*>, i:<*>: 1
---------------------------
---------------------------
cluster 65: len=1
logNotificationVisibilityChanges runInThread over (ground truth)
<*> <*> (final_template)
<*> <*>: 1
---------------------------
---------------------------
cluster 66: len=1
isSimPinSecure mSimDatas is <*> or empty (ground truth)
<*> <*> is <*> or empty (final_template)
<*> <*> is <*> or empty: 1
---------------------------
---------------------------
cluster 52: len=1
disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings > (ground truth)
disable: < expand <*> alerts <*> back home recent clock navigationbar search quick_settings > (final_template)
disable: < expand <*> alerts <*> back home recent clock navigationbar search quick_settings >: 1
---------------------------
---------------------------
cluster 38: len=1
HBM brightnessIn =<*> (ground truth)
HBM brightnessIn =<*> (final_template)
HBM brightnessIn =<*>: 1
---------------------------
---------------------------
cluster 8: len=1
*** unregister callback for <*> (ground truth)
unregister callback for <*> (final_template)
unregister callback for <*>: 1
---------------------------
---------------------------
cluster 10: len=1
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*> (ground truth)
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*> (final_template)
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>: 1
---------------------------
---------------------------
cluster 7: len=1
*** register callback for <*>@<*> (ground truth)
register callback for <*>@<*> (final_template)
register callback for <*>@<*>: 1
---------------------------
---------------------------
cluster 14: len=1
logNotificationVisibilityChanges runInThread over (ground truth)
<*> <*> (final_template)
<*> <*>: 1
---------------------------
---------------------------
cluster 15: len=1
START u0 {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*> (ground truth)
START u0 {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*> (final_template)
START u0 {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>: 1
---------------------------
---------------------------
cluster 3: len=9
cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*> (ground truth)
cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*> (final_template)
cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>: 1
---------------------------
---------------------------
cluster 13: len=2
animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*> (ground truth)
animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*> (final_template)
animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>: 1
---------------------------
---------------------------
cluster 6: len=3
<*>: Must execute in UI (ground truth)
android.util.AndroidRuntimeException: Must execute in UI (final_template)
android.util.AndroidRuntimeException: Must execute in UI: 1
---------------------------
---------------------------
cluster 5: len=9
getLastAudibleStreamVolume treamType: <*> (ground truth)
getLastAudibleStreamVolume treamType: <*> (final_template)
getLastAudibleStreamVolume treamType: <*>: 1
---------------------------
---------------------------
cluster 18: len=3
Acquiring suspend blocker "PowerManagerService.WakeLocks". (ground truth)
Acquiring suspend blocker "<*>" (final_template)
Acquiring suspend blocker "<*>": 1
---------------------------
---------------------------
cluster 19: len=1
cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*> (ground truth)
cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*> (final_template)
cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>: 1
---------------------------
---------------------------
cluster 20: len=1
cancelNotificationLocked called,tell the app,reason = <*> (ground truth)
cancelNotificationLocked called,tell the app,reason = <*> (final_template)
cancelNotificationLocked called,tell the app,reason = <*>: 1
---------------------------
---------------------------
cluster 25: len=1
The change in focus caused us to need to do a layout begin (ground truth)
The change in focus caused us to need to <*> (final_template)
The change in focus caused us to need to <*>: 1
---------------------------
---------------------------
cluster 4: len=7
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output (ground truth)
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output (final_template)
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output: 1
---------------------------
---------------------------
cluster 23: len=1
Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] (ground truth)
Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] (final_template)
Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>]: 1
---------------------------
---------------------------
cluster 12: len=2
playSoundEffect effectType: <*> (ground truth)
playSoundEffect effectType: <*> (final_template)
playSoundEffect effectType: <*>: 1
---------------------------
---------------------------
cluster 29: len=2
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) } (ground truth)
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) } (final_template)
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) }: 1
---------------------------
---------------------------
cluster 9: len=1
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> (ground truth)
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> (final_template)
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>: 1
---------------------------
---------------------------
cluster 0: len=11
cancelNotification,index:<*> (ground truth)
cancelNotification,index:<*> (final_template)
cancelNotification,index:<*>: 1
---------------------------
---------------------------
cluster 31: len=1
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> dat=<*> flg=<*> cmp=<*> (has extras) } (ground truth)
Skipping, withExcluded: <*>, tr.intent:<*> (final_template)
Skipping, withExcluded: <*>, tr.intent:<*>: 1
---------------------------
---------------------------
cluster 16: len=1
ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*> (ground truth)
ActivityRecord info: <*>}}, euid: <*> (final_template)
ActivityRecord info: <*>}}, euid: <*>: 1
---------------------------
---------------------------
cluster 28: len=2
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=<*> } (ground truth)
Skipping, withExcluded: <*>, tr.intent:<*> cmp=<*> bnds=<*> }} (final_template)
Skipping, withExcluded: <*>, tr.intent:<*> cmp=<*> bnds=<*> }}: 1
---------------------------
---------------------------
cluster 17: len=4
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (final_template)
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 32: len=1
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> dat=<*> typ=<*> flg=<*> cmp=<*> (has extras) } (ground truth)
Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) } (final_template)
Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }: 1
---------------------------
---------------------------
cluster 22: len=1
applyOptionsLocked: Unknown animationType=<*> (ground truth)
applyOptionsLocked: Unknown animationType=<*> (final_template)
applyOptionsLocked: Unknown animationType=<*>: 1
---------------------------
---------------------------
cluster 36: len=1
*** unregister callback for <*>@<*> (ground truth)
*** unregister callback for <*>@<*> (final_template)
*** unregister callback for <*>@<*>: 1
---------------------------
---------------------------
cluster 21: len=2
cancelNotificationLocked:<*>|<*>|<*>|<*>|<*> (ground truth)
<*>|<*>|<*>|<*>|<*> (final_template)
<*>|<*>|<*>|<*>|<*>: 1
---------------------------
---------------------------
cluster 44: len=1
cleanUpApplicationRecord -- <*> (ground truth)
cleanUpApplicationRecord -- <*> (final_template)
cleanUpApplicationRecord -- <*>: 1
---------------------------
---------------------------
cluster 11: len=2
onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=<*> (ground truth)
onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 }, mBlockTouches=<*> (final_template)
onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 }, mBlockTouches=<*>: 1
---------------------------
---------------------------
cluster 41: len=1
isBluetoothA2dpOn... (ground truth)
<*>... (final_template)
<*>...: 1
---------------------------
---------------------------
cluster 26: len=1
The change in focus caused us to need to do a layout end (ground truth)
The change in <*> caused us to need to do a <*> (final_template)
The change in <*> caused us to need to do a <*>: 1
---------------------------
---------------------------
cluster 43: len=2
getDevicesForStream streamType: <*> (ground truth)
getDevicesForStream streamType: <*> (final_template)
getDevicesForStream streamType: <*>: 1
---------------------------
---------------------------
cluster 49: len=1
sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =time_tick (ground truth)
sending alarm Alarm{ <*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =<*> (final_template)
sending alarm Alarm{ <*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =<*>: 1
---------------------------
---------------------------
cluster 45: len=1
cleanUpApplicationRecordLocked, pid: <*>, restart: <*> (ground truth)
cleanUpApplicationRecordLocked, pid: <*>, restart: <*> (final_template)
cleanUpApplicationRecordLocked, pid: <*>, restart: <*>: 1
---------------------------
---------------------------
cluster 24: len=3
updateNotificationShade: total=<*>, active=<*> (ground truth)
updateNotificationShade: total=<*>, active=<*> (final_template)
updateNotificationShade: total=<*>, active=<*>: 1
---------------------------
---------------------------
cluster 48: len=1
setSpeakerphoneOn on: <*> (ground truth)
setSpeakerphoneOn on: <*> (final_template)
setSpeakerphoneOn on: <*>: 1
---------------------------
---------------------------
cluster 35: len=4
release:lock=<*>, flg=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*> (final_template)
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 38: len=1
Start dump, calling from : pid=<*>, uid=<*> (ground truth)
Start dump, calling from : pid=<*>, uid=<*> (final_template)
Start dump, calling from : pid=<*>, uid=<*>: 1
---------------------------
---------------------------
cluster 52: len=1
received broadcast <*> (ground truth)
received broadcast <*> (final_template)
received broadcast <*>: 1
---------------------------
---------------------------
cluster 30: len=3
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } (ground truth)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } (final_template)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) }: 1
---------------------------
---------------------------
cluster 51: len=1
scheduleTimeTickEvent triggerAtTime = <*> (ground truth)
scheduleTimeTickEvent triggerAtTime = <*> (final_template)
scheduleTimeTickEvent triggerAtTime = <*>: 1
---------------------------
---------------------------
cluster 2: len=60
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>) (ground truth)
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({*}), dockedStackBounds=Rect({*}) (final_template)
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({*}), dockedStackBounds=Rect({*}): 1
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>): 1
---------------------------
---------------------------
cluster 39: len=2
setWiredDeviceConnectionState type: <*> state: <*> (ground truth)
setWiredDeviceConnectionState type: <*> state: <*> (final_template)
setWiredDeviceConnectionState type: <*> state: <*>: 1
---------------------------
---------------------------
cluster 46: len=1
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*> (ground truth)
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*> (final_template)
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>: 1
---------------------------
---------------------------
cluster 40: len=1
ActivityManagerService,attachApplication,callingPid = <*> (ground truth)
ActivityManagerService,attachApplication,callingPid = <*> (final_template)
ActivityManagerService,attachApplication,callingPid = <*>: 1
---------------------------
---------------------------
cluster 50: len=1
Received TIME_TICK alarm; rescheduling (ground truth)
Received <*> alarm; rescheduling (final_template)
Received <*> alarm; rescheduling: 1
---------------------------
---------------------------
cluster 9: len=1
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching (ground truth)
remove(<*>) changed bounds; rebatching (final_template)
remove(<*>) changed bounds; rebatching: 1
---------------------------
---------------------------
cluster 13: len=1
Pid:<*> MediaPlayer destructor (ground truth)
Pid:<*> <*> destructor (final_template)
Pid:<*> <*> destructor: 1
---------------------------
---------------------------
cluster 1: len=17
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
acquire lock=<*>, flags=0x1, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (final_template)
acquire lock=<*>, flags=0x1, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 12: len=1
[HSM] stayAwake <*> uid: <*>, pid: <*> (ground truth)
[HSM] stayAwake <*> uid: <*>, pid: <*> (final_template)
[HSM] stayAwake <*> uid: <*>, pid: <*>: 1
---------------------------
---------------------------
cluster 16: len=1
new Process app=ProcessRecord{<*> <*>}, name: <*>:qzone, euid: <*> (ground truth)
new Process app=ProcessRecord{6eaaf00 <*>/u0a<*>}, name: <*>, euid: <*> (final_template)
new Process app=ProcessRecord{6eaaf00 <*>/u0a<*>}, name: <*>, euid: <*>: 1
---------------------------
---------------------------
cluster 17: len=1
Start proc <*> for service <*> (ground truth)
Start proc <*> for service <*> (final_template)
Start proc <*> for service <*>: 1
---------------------------
---------------------------
cluster 18: len=1
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=[<*>] sound=<*> tick defaults=<*> flags=<*> color=<*> vis=PRIVATE) (ground truth)
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=<*> sound=<*> tick defaults=<*> flags=<*> color=<*> vis=<*> (final_template)
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=<*> sound=<*> tick defaults=<*> flags=<*> color=<*> vis=<*>: 1
---------------------------
---------------------------
cluster 20: len=1
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?false (ground truth)
updateLightsLocked,mInCall = <*>,mScreenOn = <*>,ledNotification == <*> (final_template)
updateLightsLocked,mInCall = <*>,mScreenOn = <*>,ledNotification == <*>: 1
---------------------------
---------------------------
cluster 19: len=1
enqueueNotificationInternal: n.getKey = <*> (ground truth)
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|<*>|<*> (final_template)
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|<*>|<*>: 1
---------------------------
---------------------------
cluster 6: len=1
sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}},repeatInterval = <*>,listenerTag =<*> (ground truth)
sending alarm <*> type <*> when <*> <*> (final_template)
sending alarm <*> type <*> when <*> <*>: 1
---------------------------
---------------------------
cluster 7: len=1
Killing <*> (adj <*>): empty for <*> (ground truth)
Killing <*> (adj <*>): empty for <*> (final_template)
Killing <*> (adj <*>): empty for <*>: 1
---------------------------
---------------------------
cluster 4: len=7
playSoundEffect effectType: <*> (ground truth)
playSoundEffect effectType: <*> (final_template)
playSoundEffect effectType: <*>: 1
---------------------------
---------------------------
cluster 14: len=1
Process <*>:qzone (pid <*>) has died (ground truth)
Process <*> (pid <*>) has died (final_template)
Process <*> (pid <*>) has died: 1
---------------------------
---------------------------
cluster 15: len=1
Scheduling restart of crashed service <*> in <*> (ground truth)
Scheduling restart of crashed service <*> in <*> (final_template)
Scheduling restart of crashed service <*> in <*>: 1
---------------------------
---------------------------
cluster 25: len=1
ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*> (ground truth)
ActivityRecord info: ActivityInfo{ <*> }, euid: <*> (final_template)
ActivityRecord info: ActivityInfo{ <*> }, euid: <*>: 1
---------------------------
---------------------------
cluster 2: len=25
Acquiring suspend blocker "PowerManagerService.WakeLocks". (ground truth)
Acquiring suspend blocker "<*>". (final_template)
Acquiring suspend blocker "<*>".: 1
---------------------------
---------------------------
cluster 24: len=2
START u0 {act=<*> cat=[<*>] flg=<*> cmp=<*> bnds=<*>} from uid <*> on display <*> (ground truth)
START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=<*> bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*> (final_template)
START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=<*> bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>: 1
---------------------------
---------------------------
cluster 10: len=1
Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found (ground truth)
Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found (final_template)
Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found: 1
---------------------------
---------------------------
cluster 23: len=2
logNotificationVisibilityChanges runInThread over (ground truth)
logNotificationVisibilityChanges <*> <*> (final_template)
logNotificationVisibilityChanges <*> <*>: 1
---------------------------
---------------------------
cluster 3: len=13
release:lock=<*>, flg=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*> (ground truth)
release:lock=<*>, flg=<*>, tag="<*>", name=<*>", ws=<*>, uid=<*>, pid=<*> (final_template)
release:lock=<*>, flg=<*>, tag="<*>", name=<*>", ws=<*>, uid=<*>, pid=<*>: 1
---------------------------
---------------------------
cluster 5: len=8
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=<*> } (ground truth)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>] (final_template)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>]: 1
---------------------------
---------------------------
cluster 28: len=3
getAllCellInfo is blocked by permission manager . callingPackage = <*> (ground truth)
<*> is blocked by permission manager . callingPackage = <*> (final_template)
<*> is blocked by permission manager . callingPackage = <*>: 1
---------------------------
---------------------------
cluster 31: len=1
getStreamVolume treamType: <*> (ground truth)
getStreamVolume treamType: <*> (final_template)
getStreamVolume treamType: <*>: 1
---------------------------
---------------------------
cluster 34: len=1
ACTION_BATTERY_CHANGED pluggedType: <*> (ground truth)
ACTION_BATTERY_CHANGED pluggedType: <*> (final_template)
ACTION_BATTERY_CHANGED pluggedType: <*>: 1
---------------------------
---------------------------
cluster 35: len=1
battery changed pluggedType: <*> (ground truth)
battery changed pluggedType: <*> (final_template)
battery changed pluggedType: <*>: 1
---------------------------
---------------------------
cluster 8: len=2
sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =time_tick (ground truth)
sending alarm Alarm{ <*> type <*> when <*> <*>,repeatInterval = <*>,listenerTag =<*> (final_template)
sending alarm Alarm{ <*> type <*> when <*> <*>,repeatInterval = <*>,listenerTag =<*>: 1
---------------------------
---------------------------
cluster 22: len=1
Marking notification as seen <*>|<*>|<*>|<*>|<*> (ground truth)
Marking notification as seen <*>|<*>|<*>|<*>|<*> (final_template)
Marking notification as seen <*>|<*>|<*>|<*>|<*>: 1
---------------------------
---------------------------
cluster 36: len=2
RefreshBatteryInfo isBatteryLow: <*> (ground truth)
RefreshBatteryInfo isBatteryLow: <*> (final_template)
RefreshBatteryInfo isBatteryLow: <*>: 1
---------------------------
---------------------------
cluster 30: len=1
setDataSource(<*>, <*>, <*>) (ground truth)
setDataSource(<*>, <*>, <*>) (final_template)
setDataSource(<*>, <*>, <*>): 1
---------------------------
---------------------------
cluster 27: len=1
ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*> (ground truth)
ActivityRecord info: <*> <*>}}, euid: <*> (final_template)
ActivityRecord info: <*> <*>}}, euid: <*>: 1
---------------------------
---------------------------
cluster 26: len=2
ACTIVITY check resid: <*>, size=<*> (ground truth)
ACTIVITY check resid: <*>, size=<*> (final_template)
ACTIVITY check resid: <*>, size=<*>: 1
---------------------------
---------------------------
cluster 29: len=1
getCellLocation is blocked by permission manager uid:<*> pid:<*> (ground truth)
<*> is blocked by permission manager uid:<*> pid:<*> (final_template)
<*> is blocked by permission manager uid:<*> pid:<*>: 1
---------------------------
---------------------------
cluster 33: len=1
ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*> (ground truth)
ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*> (final_template)
ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>: 1
---------------------------
---------------------------
cluster 37: len=1
ChargingSpeed Wattage: <*> ST: <*> --> <*> (ground truth)
ChargingSpeed Wattage: <*> ST: <*> --> <*> (final_template)
ChargingSpeed Wattage: <*> ST: <*> --> <*>: 1
---------------------------
---------------------------
cluster 0: len=117
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>) (ground truth)
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=<*>, dockedStackBounds=<*> (final_template)
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=<*>, dockedStackBounds=<*>: 2
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>): 1
---------------------------
---------------------------
cluster 32: len=1
updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*> (ground truth)
updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*> (final_template)
updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>: 1
---------------------------
---------------------------
cluster 5: len=1
ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*> (ground truth)
ActivityRecord info: ActivityInfo{ <*> }, euid: <*> (final_template)
ActivityRecord info: ActivityInfo{ <*> }, euid: <*>: 1
---------------------------
---------------------------
cluster 2: len=1
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?false (ground truth)
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == <*> (final_template)
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == <*>: 1
---------------------------
---------------------------
cluster 6: len=1
startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) } (ground truth)
startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) } (final_template)
startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) }: 1
---------------------------
---------------------------
cluster 3: len=1
playSoundEffect effectType: <*> (ground truth)
playSoundEffect effectType: <*> (final_template)
playSoundEffect effectType: <*>: 1
---------------------------
---------------------------
cluster 1: len=1
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=[<*>] sound=<*> tick defaults=<*> flags=<*> color=<*> category=msg vis=PRIVATE) (ground truth)
enqueueNotificationInternal: pkg=<*> id=<*> notification=<*> (final_template)
enqueueNotificationInternal: pkg=<*> id=<*> notification=<*>: 1
---------------------------
---------------------------
cluster 4: len=1
START u0 {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*> (ground truth)
START <*> {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*> (final_template)
START <*> {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>: 1
---------------------------
---------------------------
cluster 0: len=4
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=<*> } (ground truth)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>] (final_template)
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>]: 1
---------------------------
---------cache_pairs---------
ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>
updateDimmedActivatedHideSensitive overlap:<*>
release:lock=<*>, flg=<*>, tag="<*>", name="<*>", ws=<*>, uid=<*>, pid=<*>
shouldBlockLocation running ...
shouldBlockLocation ret:<*>
suspendAutohide
overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*>
state.clipTopAmount:<*>, i:<*>
opening app wtoken = <*>}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*>
acquire lock=<*>, flags=<*>, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>
Skipping AppWindowToken{ <*> token=<*> <*> u0 <*> <*> }}}}} -- going to hide
visible is <*>
visible is system.call.count gt <*>
visible is <*> gt <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
setSystemUiVisibility vis=<*> mask=ffffffff oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)
cancelAutohide
notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>
Destroying surface Surface(name=<*>) called by <*> <*> <*> android.view.IWindowSession$Stub.onTransact:<*> <*> android.os.Binder.execTransact:<*> <bottom of call stack> <bottom of call stack>
Destroying surface Surface(name=<*>) called by <*>
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
<*> is complete, call <*>
Screen frozen for +<*> due to <*>
startAnimation <*>
<*> <*>
remove(<*>: <*> <*> <*>)
rotationForOrientationLw(orient=<*>, last=<*>); user=<*> <*>
Application requested orientation <*>, got rotation <*> which has compatible metrics
getNeighboringCellInfo calling app is <*>
Releasing suspend blocker "<*>".
HBM brightnessIn =<*>
HBM brightnessOut =<*>
Animating brightness: target=<*>, rate=<*>
interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>
interceptKeyBeforeQueueing: key <*> , result : <*>
resumeSuspendedAutohide
querySoundEffectsEnabled...
Bad activity token: <*>
java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token
onTouchEvent::<*>, x=<*>, y=<*>
schedulePeek
getRingtonePlayer...
disable: < expand <*> alerts <*> back home recent clock navigationbar search quick_settings >
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?true
updateLightsLocked,turn off <*>
onExpandingStarted
onTrackingStarted
cancelPeek: <*>
flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>
onTrackingStopped: <*>
onExpandingFinished
Sending non-protected broadcast <*> from system <*> pkg <*>
<*> runInThread start
onNotificationVisibilityChanged called
<*> <*> is <*> or empty
registerCallback not in <*>.
cancelNotification,index:<*>
setLightsOn(true)
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({*}), dockedStackBounds=Rect({*})
cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
getLastAudibleStreamVolume treamType: <*>
android.util.AndroidRuntimeException: Must execute in UI
register callback for <*>@<*>
unregister callback for <*>
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>
onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 }, mBlockTouches=<*>
playSoundEffect effectType: <*>
animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>
START u0 {act=<*> flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>
ActivityRecord info: <*>}}, euid: <*>
Acquiring suspend blocker "<*>"
cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>
cancelNotificationLocked called,tell the app,reason = <*>
<*>|<*>|<*>|<*>|<*>
applyOptionsLocked: Unknown animationType=<*>
Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>]
updateNotificationShade: total=<*>, active=<*>
The change in focus caused us to need to <*>
The change in <*> caused us to need to do a <*>
removeNotificationChildren
Skipping, withExcluded: <*>, tr.intent:<*> cmp=<*> bnds=<*> }}
Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> flg=<*> cmp=<*> (has extras) }
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) }
Skipping, withExcluded: <*>, tr.intent:<*>
Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }
closeQs
instantCollapse
*** unregister callback for <*>@<*>
isMusicActive...
Start dump, calling from : pid=<*>, uid=<*>
setWiredDeviceConnectionState type: <*> state: <*>
ActivityManagerService,attachApplication,callingPid = <*>
<*>...
isBluetoothScoOn...
getDevicesForStream streamType: <*>
cleanUpApplicationRecord -- <*>
cleanUpApplicationRecordLocked, pid: <*>, restart: <*>
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>
getMode...
setSpeakerphoneOn on: <*>
sending alarm Alarm{ <*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =<*>
Received <*> alarm; rescheduling
scheduleTimeTickEvent triggerAtTime = <*>
received broadcast <*>
handleTimeUpdate
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=<*>, dockedStackBounds=<*>
acquire lock=<*>, flags=0x1, tag="<*>", name=<*>, ws=<*>, uid=<*>, pid=<*>
Acquiring suspend blocker "<*>".
release:lock=<*>, flg=<*>, tag="<*>", name=<*>", ws=<*>, uid=<*>, pid=<*>
Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> bnds=[<*>,<*>]
sending alarm <*> type <*> when <*> <*>
Killing <*> (adj <*>): empty for <*>
sending alarm Alarm{ <*> type <*> when <*> <*>,repeatInterval = <*>,listenerTag =<*>
remove(<*>) changed bounds; rebatching
Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found
abandonAudioFocus
[HSM] stayAwake <*> uid: <*>, pid: <*>
Pid:<*> <*> destructor
Process <*> (pid <*>) has died
Scheduling restart of crashed service <*> in <*>
new Process app=ProcessRecord{6eaaf00 <*>/u0a<*>}, name: <*>, euid: <*>
Start proc <*> for service <*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=<*> sound=<*> tick defaults=<*> flags=<*> color=<*> vis=<*>
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|<*>|<*>
updateLightsLocked,mInCall = <*>,mScreenOn = <*>,ledNotification == <*>
mHeadsUpExistenceChangedRunnable
Marking notification as seen <*>|<*>|<*>|<*>|<*>
logNotificationVisibilityChanges <*> <*>
START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=<*> bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>
ActivityRecord info: ActivityInfo{ <*> }, euid: <*>
ACTIVITY check resid: <*>, size=<*>
ActivityRecord info: <*> <*>}}, euid: <*>
<*> is blocked by permission manager . callingPackage = <*>
<*> is blocked by permission manager uid:<*> pid:<*>
setDataSource(<*>, <*>, <*>)
getStreamVolume treamType: <*>
updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>
ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>
ACTION_BATTERY_CHANGED pluggedType: <*>
battery changed pluggedType: <*>
RefreshBatteryInfo isBatteryLow: <*>
ChargingSpeed Wattage: <*> ST: <*> --> <*>
handleBatteryUpdate
enqueueNotificationInternal: pkg=<*> id=<*> notification=<*>
updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == <*>
START <*> {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>
startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) }
