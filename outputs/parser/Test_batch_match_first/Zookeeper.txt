---------------------------
cluster 1: len=36
Send worker leaving thread (ground truth)
Send worker leaving thread (final_template)
Send worker leaving thread: 1
---------------------------
---------------------------
cluster 2: len=49
Interrupted while waiting for message on queue (ground truth)
Interrupted while waiting for message on queue (final_template)
Interrupted while waiting for message on queue: 1
---------------------------
---------------------------
cluster 4: len=44
Interrupting SendWorker (ground truth)
Interrupting SendWorker (final_template)
Interrupting SendWorker: 1
---------------------------
---------------------------
cluster 0: len=37
Received connection request <*> (ground truth)
Received connection request <*> (final_template)
Received connection request <*>: 1
---------------------------
---------------------------
cluster 3: len=33
Connection broken for id <*>, my id = <*>, error = (ground truth)
Connection broken for id <*>, my id = <*>, error = (final_template)
Connection broken for id <*>, my id = <*>, error =: 1
---------------------------
---------------------------
cluster 5: len=1
Notification time out: <*> (ground truth)
Notification time out: <*> (final_template)
Notification time out: <*>: 1
---------------------------
---------------------------
cluster 8: len=19
******* GOODBYE <*> ******** (ground truth)
******* GOODBYE <*> ******** (final_template)
******* GOODBYE <*> ********: 1
---------------------------
---------------------------
cluster 15: len=1
My election bind port: <*>/<*> (ground truth)
My election bind port: <*> (final_template)
My election bind port: <*>: 1
---------------------------
---------------------------
cluster 16: len=1
Have smaller server identifier, so dropping the connection: (<*>, <*>) (ground truth)
Have smaller server identifier, so dropping the connection: (<*>, <*>) (final_template)
Have smaller server identifier, so dropping the connection: (<*>, <*>): 1
---------------------------
---------------------------
cluster 9: len=12
Unexpected exception causing shutdown while sock still open (ground truth)
Unexpected exception causing shutdown while <*> still open (final_template)
Unexpected exception causing shutdown while <*> still open: 1
---------------------------
---------------------------
cluster 13: len=4
Expiring session <*>, timeout of <*> exceeded (ground truth)
Expiring session <*>, timeout of 10000ms exceeded (final_template)
Expiring session <*>, timeout of 10000ms exceeded: 1
---------------------------
---------------------------
cluster 10: len=2
Client attempting to renew session <*> at <*> (ground truth)
Client attempting to renew session <*> at <*> (final_template)
Client attempting to renew session <*> at <*>: 1
---------------------------
---------------------------
cluster 20: len=2
FOLLOWING - LEADER ELECTION TOOK - <*> (ground truth)
FOLLOWING - LEADER ELECTION TOOK - <*> (final_template)
FOLLOWING - LEADER ELECTION TOOK - <*>: 1
---------------------------
---------------------------
cluster 12: len=1
Server environment:<*> (ground truth)
Server environment:user.dir=<*> (final_template)
Server environment:user.dir=<*>: 1
---------------------------
---------------------------
cluster 21: len=1
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LEADING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state): 1
---------------------------
---------------------------
cluster 4: len=13
Accepted socket connection from <*> (ground truth)
Accepted socket connection from <*> (final_template)
Accepted socket connection from <*>: 1
---------------------------
---------------------------
cluster 1: len=14
caught end of stream exception (ground truth)
caught end of stream exception (final_template)
caught end of stream exception: 1
---------------------------
---------------------------
cluster 24: len=2
Revalidating client: <*> (ground truth)
Revalidating client: <*> (final_template)
Revalidating client: <*>: 1
---------------------------
---------------------------
cluster 23: len=2
Server environment:<*> (ground truth)
Server environment:java.vendor=<*> (final_template)
Server environment:java.vendor=<*>: 1
---------------------------
---------------------------
cluster 0: len=18
Closed socket connection for client <*> which had sessionid <*> (ground truth)
Closed socket connection for client <*> which had sessionid <*> (final_template)
Closed socket connection for client <*> which had sessionid <*>: 1
---------------------------
---------------------------
cluster 7: len=7
Processed session termination for sessionid: <*> (ground truth)
Processed session termination for sessionid: <*> (final_template)
Processed session termination for sessionid: <*>: 1
---------------------------
---------------------------
cluster 18: len=1
New election. My id = <*>, proposed zxid=<*> (ground truth)
New election. My id = <*>, proposed zxid=<*> (final_template)
New election. My id = <*>, proposed zxid=<*>: 1
---------------------------
---------------------------
cluster 5: len=17
Connection request from old client <*>; will be dropped if server is in r-o mode (ground truth)
Connection request from old client <*>; will be dropped if server is in r-o mode (final_template)
Connection request from old client <*>; will be dropped if server is in r-o mode: 1
---------------------------
---------------------------
cluster 11: len=1
Unexpected Exception: (ground truth)
Unexpected Exception: <*> (final_template)
Unexpected Exception: <*>: 1
---------------------------
---------------------------
cluster 22: len=1
autopurge.snapRetainCount set to <*> (ground truth)
autopurge.snapRetainCount set to <*> (final_template)
autopurge.snapRetainCount set to <*>: 1
---------------------------
---------------------------
cluster 3: len=19
Established session <*> with negotiated timeout <*> for client <*> (ground truth)
Established session <*> with negotiated timeout <*> for client <*> (final_template)
Established session <*> with negotiated timeout <*> for client <*>: 1
---------------------------
---------------------------
cluster 2: len=17
Client attempting to establish new session at <*> (ground truth)
Client attempting to establish new session at <*> (final_template)
Client attempting to establish new session at <*>: 1
---------------------------
---------------------------
cluster 19: len=1
Server environment:<*> (ground truth)
Server environment:host.name=<*> (final_template)
Server environment:host.name=<*>: 1
---------------------------
---------------------------
cluster 25: len=1
Server environment:<*> (ground truth)
Server environment:zookeeper.version=<*>, built on <*> (final_template)
Server environment:zookeeper.version=<*>, built on <*>: 1
---------------------------
---------------------------
cluster 26: len=1
Server environment:<*> (ground truth)
Server environment:user.name=<*> (final_template)
Server environment:user.name=<*>: 1
---------------------------
---------------------------
cluster 32: len=1
tickTime set to <*> (ground truth)
tickTime set to <*> (final_template)
tickTime set to <*>: 1
---------------------------
---------------------------
cluster 28: len=1
Closed socket connection for client <*> (no session established for client) (ground truth)
Closed socket connection for client <*> (no session established for client) (final_template)
Closed socket connection for client <*> (no session established for client): 1
---------------------------
---------------------------
cluster 29: len=1
Exception causing close of session <*> due to java.io.IOException: ZooKeeperServer not running (ground truth)
Exception causing close of session <*> due to <*>: <*> (final_template)
Exception causing close of session <*> due to <*>: <*>: 1
---------------------------
---------------------------
cluster 27: len=1
Server environment:<*> (ground truth)
Server environment:os.name=<*> (final_template)
Server environment:os.name=<*>: 1
---------------------------
---------------------------
cluster 6: len=84
Cannot open channel to <*> at election address <*> (ground truth)
Cannot open channel to <*> at election address <*> (final_template)
Cannot open channel to <*> at election address <*>: 2
---------------------------
---------------------------
cluster 31: len=1
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), FOLLOWING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state): 1
---------------------------
---------------------------
cluster 30: len=1
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state): 1
---------------------------
---------------------------
cluster 6: len=1
Follower sid: <*> : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@<*> (ground truth)
Follower sid: <*> : <*> : <*> (final_template)
Follower sid: <*> : <*> : <*>: 1
---------------------------
---------------------------
cluster 4: len=2
Snapshotting: <*> to <*> (ground truth)
Snapshotting: <*> to <*> (final_template)
Snapshotting: <*> to <*>: 1
---------------------------
---------------------------
cluster 7: len=1
maxSessionTimeout set to <*> (ground truth)
maxSessionTimeout set to <*> (final_template)
maxSessionTimeout set to <*>: 1
---------------------------
---------------------------
cluster 12: len=1
First is <*> (ground truth)
First is <*> (final_template)
First is <*>: 1
---------------------------
---------------------------
cluster 0: len=1
Got user-level KeeperException when processing sessionid:<*> type:create cxid:<*> zxid:<*> txntype:<*> reqpath:<*> Error Path:<*> Error:KeeperErrorCode = NodeExists for <*> (ground truth)
Got user-level KeeperException when processing sessionid:<*> type:<*> cxid:<*> zxid:<*> txntype:<*> reqpath:<*> Error Path:<*> Error:<*> (final_template)
Got user-level KeeperException when processing sessionid:<*> type:<*> cxid:<*> zxid:<*> txntype:<*> reqpath:<*> Error Path:<*> Error:<*>: 1
---------------------------
---------------------------
cluster 11: len=1
shutdown of request processor complete (ground truth)
shutdown of <*> complete (final_template)
shutdown of <*> complete: 1
---------------------------
---------------------------
cluster 15: len=2
Getting a snapshot from leader (ground truth)
Getting a snapshot from leader (final_template)
Getting a snapshot from leader: 1
---------------------------
---------------------------
cluster 18: len=2
minSessionTimeout set to <*> (ground truth)
minSessionTimeout set to <*> (final_template)
minSessionTimeout set to <*>: 1
---------------------------
---------------------------
cluster 17: len=1
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), FOLLOWING (n.state), <*> (n.sid), <*> (n.peerEPoch), FOLLOWING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state): 1
---------------------------
---------------------------
cluster 8: len=1
Server environment:<*> (ground truth)
Server environment:java.class.path=<*> (final_template)
Server environment:java.class.path=<*>: 1
---------------------------
---------------------------
cluster 3: len=1
Starting quorum peer (ground truth)
Starting <*> (final_template)
Starting <*>: 1
---------------------------
---------------------------
cluster 19: len=1
Server environment:<*> (ground truth)
Server environment:java.home=<*> (final_template)
Server environment:java.home=<*>: 1
---------------------------
---------------------------
cluster 2: len=2
Expiring session <*>, timeout of <*> exceeded (ground truth)
Expiring session <*>, timeout of <*> exceeded (final_template)
Expiring session <*>, timeout of <*> exceeded: 1
---------------------------
---------------------------
cluster 5: len=3
autopurge.purgeInterval set to <*> (ground truth)
autopurge.purgeInterval set to <*> (final_template)
autopurge.purgeInterval set to <*>: 1
---------------------------
---------------------------
cluster 13: len=1
Reading snapshot <*> (ground truth)
Reading snapshot <*> (final_template)
Reading snapshot <*>: 1
---------------------------
---------------------------
cluster 1: len=3
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LEADING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LEADING (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LEADING (my state): 1
---------------------------
---------------------------
cluster 14: len=1
Sending DIFF (ground truth)
Sending <*> (final_template)
Sending <*>: 1
---------------------------
---------------------------
cluster 9: len=1
Have quorum of supporters; starting up and setting last processed zxid: <*> (ground truth)
Have quorum of <*>; starting up and setting last processed zxid: <*> (final_template)
Have quorum of <*>; starting up and setting last processed zxid: <*>: 1
---------------------------
---------------------------
cluster 10: len=1
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), FOLLOWING (n.state), <*> (n.sid), <*> (n.peerEPoch), LEADING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state): 1
---------------------------
---------------------------
cluster 16: len=4
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state) (ground truth)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state) (final_template)
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state): 1
---------------------------
---------cache_pairs---------
Received connection request <*>
Send worker leaving thread
Interrupted while waiting for message on queue
Connection broken for id <*>, my id = <*>, error =
Interrupting SendWorker
Notification time out: <*>
Closed socket connection for client <*> which had sessionid <*>
caught end of stream exception
Client attempting to establish new session at <*>
Established session <*> with negotiated timeout <*> for client <*>
Accepted socket connection from <*>
Connection request from old client <*>; will be dropped if server is in r-o mode
Cannot open channel to <*> at election address <*>
Processed session termination for sessionid: <*>
******* GOODBYE <*> ********
Unexpected exception causing shutdown while <*> still open
Client attempting to renew session <*> at <*>
Unexpected Exception: <*>
Server environment:user.dir=<*>
Expiring session <*>, timeout of 10000ms exceeded
LOOKING
My election bind port: <*>
Have smaller server identifier, so dropping the connection: (<*>, <*>)
FOLLOWING
New election. My id = <*>, proposed zxid=<*>
Server environment:host.name=<*>
FOLLOWING - LEADER ELECTION TOOK - <*>
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEpoch), <*> (my state)
autopurge.snapRetainCount set to <*>
Server environment:java.vendor=<*>
Revalidating client: <*>
Server environment:zookeeper.version=<*>, built on <*>
Server environment:user.name=<*>
Server environment:os.name=<*>
Closed socket connection for client <*> (no session established for client)
Exception causing close of session <*> due to <*>: <*>
tickTime set to <*>
Got user-level KeeperException when processing sessionid:<*> type:<*> cxid:<*> zxid:<*> txntype:<*> reqpath:<*> Error Path:<*> Error:<*>
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LEADING (my state)
Expiring session <*>, timeout of <*> exceeded
Starting <*>
Snapshotting: <*> to <*>
autopurge.purgeInterval set to <*>
Follower sid: <*> : <*> : <*>
maxSessionTimeout set to <*>
Server environment:java.class.path=<*>
Have quorum of <*>; starting up and setting last processed zxid: <*>
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), <*> (n.state), <*> (n.sid), <*> (n.peerEPoch), <*> (my state)
shutdown of <*> complete
First is <*>
Reading snapshot <*>
Sending <*>
Getting a snapshot from leader
Notification: <*> (n.leader), <*> (n.zxid), <*> (n.round), LOOKING (n.state), <*> (n.sid), <*> (n.peerEPoch), LOOKING (my state)
minSessionTimeout set to <*>
Server environment:java.home=<*>
