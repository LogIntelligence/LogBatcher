EventID,EventTemplate,Occurrence
E1,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>, <*> - <*>, <*>), dockedStackBounds=Rect(<*>, <*> - <*>, <*>)",200
E2,"ready=<*>,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=<*>,boostinprogress=<*>,waitmodeenable=<*>,mode=<*>,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>",199
E3,setLightsOn(<*>),181
E4,HBM brightnessIn =<*>,85
E5,HBM brightnessOut =<*>,85
E6,"Animating brightness: target=<*>, rate=<*>",85
E7,getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output,81
E8,"userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>",69
E9,"updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>",65
E10,updateDimmedActivatedHideSensitive overlap:<*>,65
E11,shouldBlockLocation running ...,37
E12,shouldBlockLocation ret:<*>,37
E13,getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output,37
E14,"Releasing suspend blocker ""PowerManagerService.WakeLocks"".",33
E15,"Acquiring suspend blocker ""PowerManagerService.WakeLocks"".",33
E16,"acquire lock=<*>, flags=<*>, tag=""<*>"", name=<*>, ws=<*>, uid=<*>, pid=<*>",26
E17,"release:lock=<*>, flg=<*>, tag=""<*>"", name=<*>"", ws=<*>, uid=<*>, pid=<*>",26
E18,Destroying surface Surface(name=<*>) called by <*>,25
E19,suspendAutohide,23
E20,"cancelNotification,index:<*>",23
E21,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) }",21
E22,cancelPeek: <*>,20
E23,"cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =com.tencent.mobileqq,id =<*>",20
E24,"notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>",19
E25,querySoundEffectsEnabled...,17
E26,cancelAutohide,15
E27,interceptKeyTq keycode=<*> interactive=<*> keyguardActive=<*> policyFlags=<*> down <*> canceled <*>,14
E28,"interceptKeyBeforeQueueing: key <*> , result : <*>",14
E29,"Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=com.android.systemui/.recents.RecentsActivity bnds=[<*>,<*>][<*>,<*>] }",14
E30,"Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.MAIN flg=<*> cmp=com.android.incallui/.InCallActivity (has extras) }",14
E31,"getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>",14
E32,"overlapAmount:<*>, previousNotificationEnd:<*>, newYTranslation:<*>, location:<*>, i:<*>, getTopPadding:<*>, getLocationOnScreen():<*>",13
E33,"state.clipTopAmount:<*>, i:<*>",13
E34,"updateNotificationShade: total=<*>, active=<*>",13
E35,<*> runInThread <*>,12
E36,removeNotificationChildren,12
E37,closeQs,12
E38,isMusicActive...,12
E39,resumeSuspendedAutohide,10
E40,playSoundEffect effectType: <*>,10
E41,instantCollapse,9
E42,getLastAudibleStreamVolume treamType: <*>,9
E43,<*> is <*>,8
E44,"animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>",8
E45,getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity},8
E46,"Skipping, withExcluded: <*>, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=<*> cmp=com.android.contacts/.ChooseSubActivity (has extras) }",7
E47,"Skipping, withExcluded: <*>, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=<*> cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }",7
E48,"updateLightsLocked,turn off notificationLight",6
E49,onNotificationVisibilityChanged called,6
E50,The change in focus caused us to need to do a layout begin,6
E51,The change in focus caused us to need to do a layout end,6
E52,cleanUpApplicationRecord -- <*>,6
E53,"cleanUpApplicationRecordLocked, pid: <*>, restart: <*>",6
E54,"cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>",6
E55,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>,6
E56,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>,6
E57,getNeighboringCellInfo calling app is <*>,5
E58,"updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?true",4
E59,"onInterceptTouchEvent MotionEvent { action=<*>, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>, y[<*>]=<*>, toolType[<*>]=<*>, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=<*>",4
E60,"Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>]",4
E61,makeExpandedInvisible: mExpandedVisible=<*>,4
E62,"ActivityManagerService,attachApplication,callingPid = <*>",4
E63,mHeadsUpExistenceChangedRunnable,4
E64,getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor},4
E65,"rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED",3
E66,"Application requested orientation <*>, got rotation <*> which has compatible metrics",3
E67,disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >,3
E68,registerCallback not in UI.,3
E69,<*>: Must execute in UI,3
E70,disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >,3
E71,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}},repeatInterval = <*>,listenerTag =time_tick",3
E72,Received TIME_TICK alarm; rescheduling,3
E73,scheduleTimeTickEvent triggerAtTime = <*>,3
E74,received broadcast android.intent.action.TIME_TICK,3
E75,handleTimeUpdate,3
E76,getRingerMode...,3
E77,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
E78,Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> <*> com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity <*>}}} -- going to hide,2
E79,Skipping AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> <*> com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity <*>}}} -- going to hide,2
E80,"onTouchEvent::<*>, x=<*>, y=<*>",2
E81,getRingtonePlayer...,2
E82,onExpandingStarted,2
E83,"flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>",2
E84,onExpandingFinished,2
E85,Sending non-protected broadcast com.android.systemui.statusbar.visible.change from system <*> pkg <*>,2
E86,*** unregister callback for <*>,2
E87,"ActivityRecord info: ActivityInfo{<*> com.tencent.mobileqq.activity.SplashActivity}, euid: <*>",2
E88,onNotificationClick called,2
E89,"cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>",2
E90,"cancelNotificationLocked called,tell the app,reason = <*>",2
E91,cancelNotificationLocked:<*>|com.tencent.mobileqq|<*>|<*>|<*>,2
E92,"cancelNotificationLocked,remove =com.tencent.mobileqq",2
E93,applyOptionsLocked: Unknown animationType=<*>,2
E94,removeNotification:<*>|com.tencent.mobileqq|<*>|<*>|<*>,2
E95,setWiredDeviceConnectionState type: <*> state: <*>,2
E96,getDevicesForStream streamType: <*>,2
E97,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> com.android.phone broadcastIntent}}},repeatInterval = <*>,listenerTag =<*>",2
E98,enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=<*> vibrate=<*> sound=<*> tick defaults=<*> flags=<*> color=<*> vis=<*>,2
E99,"updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == null?false",2
E100,onNotificationExpansionChanged called,2
E101,"ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>",2
E102,"ACTIVITY check resid: com.example.android.notepad, size=<*>",2
E103,<*> what=<*>,2
E104,RefreshBatteryInfo isBatteryLow: <*>,2
E105,getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI},2
E106,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> <*> com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity <*>}}}, allDrawn= <*>, startingDisplayed = <*>, startingMoved = <*>, isRelaunching = <*>",1
E107,visible is system.call.count gt <*>,1
E108,visible is system.message.count gt <*>,1
E109,"orientation change is complete, call stopFreezingDisplayLocked",1
E110,Screen frozen for +<*> due to <*>,1
E111,startAnimation begin,1
E112,startAnimation end,1
E113,remove(PendingIntent{<*>: PendingIntentRecord{<*> com.tencent.qt.qtl broadcastIntent}}) changed bounds; rebatching,1
E114,Bad activity token: <*>,1
E115,<*>: <*> cannot be cast to <*>,1
E116,schedulePeek,1
E117,onTrackingStarted,1
E118,onTrackingStopped: <*>,1
E119,isSimPinSecure <*> is <*> or empty,1
E120,*** register callback for com.android.systemui.statusbar.policy.KeyguardMonitor@<*>,1
E121,[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>,1
E122,[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>,1
E123,START <*> {act=com.tencent.mobileqq.action.MAINACTIVITY flg=<*> cmp=com.tencent.mobileqq/.activity.SplashActivity (has extras)} from uid <*> on display <*>,1
E124,"Start dump, calling from : pid=<*>, uid=<*>",1
E125,isBluetoothA2dpOn...,1
E126,isBluetoothScoOn...,1
E127,getMode...,1
E128,setSpeakerphoneOn on: <*>,1
E129,setSpeakerphoneOn on:<*>,1
E130,Killing <*> (adj <*>): empty for <*>,1
E131,remove(PendingIntent{<*>: PendingIntentRecord{<*> com.android.phone broadcastIntent}}) changed bounds; rebatching,1
E132,Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found,1
E133,unregisterAudioFocusListener...,1
E134,abandonAudioFocus,1
E135,"[HSM] stayAwake <*> uid: <*>, pid: <*>",1
E136,Pid:<*> MediaPlayer destructor,1
E137,Process <*> (pid <*>) has died,1
E138,Scheduling restart of crashed service <*> in <*>,1
E139,"new Process app=ProcessRecord{<*> <*>/u0<*>}, name: <*>, euid: <*>",1
E140,Start proc <*> for service <*>,1
E141,enqueueNotificationInternal: n.getKey = <*>|com.tencent.mobileqq|<*>|<*>|<*>,1
E142,addNotification key=<*>|com.tencent.mobileqq|<*>|<*>|<*>,1
E143,Marking notification as seen <*>|com.tencent.mobileqq|<*>|<*>|<*>,1
E144,"START <*> {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=<*> cmp=com.example.android.notepad/.NotePadActivity bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>",1
E145,"START <*> {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=<*> cmp=com.tencent.mobileqq/.activity.SplashActivity bnds=[<*>,<*>][<*>,<*>]} from uid <*> on display <*>",1
E146,getCellLocation is blocked by permission manager uid:<*> pid:<*>,1
E147,isWiredHeadsetOn...,1
E148,"setDataSource(<*>, <*>, <*>)",1
E149,getStreamVolume treamType: <*>,1
E150,"updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>",1
E151,received broadcast android.intent.action.BATTERY_CHANGED,1
E152,ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>,1
E153,updateChargingLocked: charging=<*>,1
E154,"onReceive, action:android.intent.action.BATTERY_CHANGED",1
E155,ACTION_BATTERY_CHANGED pluggedType: <*>,1
E156,battery changed pluggedType: <*>,1
E157,ChargingSpeed Wattage: <*> ST: <*> --> <*>,1
E158,handleBatteryUpdate,1
E159,enqueueNotificationInternal: n.getKey = <*>|com.tencent.mm|<*>|<*>|<*>,1
E160,addNotification key=<*>|com.tencent.mm|<*>|<*>|<*>,1
E161,Marking notification as seen <*>|com.tencent.mm|<*>|<*>|<*>,1
E162,START <*> {flg=<*> cmp=com.tencent.mm/.ui.LauncherUI (has extras)} from uid <*> on display <*>,1
E163,startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=<*> cmp=<*> (has extras) },1
