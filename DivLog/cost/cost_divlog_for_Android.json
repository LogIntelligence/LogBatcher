[
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:printFreezingDisplayLogsopening app wtoken = AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}}, allDrawn= false, startingDisplayed =  false, startingMoved =  false, isRelaunching =  false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=233570404, flags=0x1, tag=\"View Lock\", name=com.android.systemui, ws=null, uid=10037, pid=2227\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x23,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping AppWindowToken{df0798e token=Token{78af589 ActivityRecord{3b04890 u0 com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity t761}}} -- going to hide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:mVisiblity.getValue is false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:visible is system.charge.show\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:mVisiblity.getValue is false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:visible is system.call.count gt 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:mVisiblity.getValue is false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:visible is system.message.count gt 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:mVisiblity.getValue is false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:visible is system.ownerinfo.show\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:mVisiblity.getValue is false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=233570404, flg=0x0, tag=\"View Lock\", name=com.android.systemui\", ws=null, uid=10037, pid=2227\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x23,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping AppWindowToken{df0798e token=Token{78af589 ActivityRecord{3b04890 u0 com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity t761}}} -- going to hide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10113}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x23,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000500 mask=ffffffff oldVal=508 newVal=40000500 diff=40000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Destroying surface Surface(name=SurfaceView - com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity) called by com.android.server.wm.WindowStateAnimator.destroyDeferredSurfaceLocked:942 com.android.server.wm.WindowManagerService.performDeferredDestroyWindow:3407 com.android.server.wm.Session.performDeferredDestroy:225 android.view.IWindowSession$Stub.onTransact:398 com.android.server.wm.Session.onTransact:136 android.os.Binder.execTransact:565 <bottom of call stack> <bottom of call stack>\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.WindowManagerService.tryStartExitingAnimation:3299 com.android.server.wm.WindowManagerService.relayoutWindow:3179 com.android.server.wm.Session.relayout:215 android.view.IWindowSession$Stub.onTransact:286 com.android.server.wm.Session.onTransact:136\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=62617001, flg=0x0, tag=\"WindowManager\", name=android\", ws=WorkSource{10113}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261843648, event=0, flags=0x1, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:orientation change is complete, call stopFreezingDisplayLocked\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Screen frozen for +1s0ms due to Window{ca98d5 u0 com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:startAnimation begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:startAnimation end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:release:lock=226887582, flg=0x0, tag=\"SCREEN_FROZEN\", name=android\", ws=null, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:remove(PendingIntent{19abed0: PendingIntentRecord{a485420 com.tencent.qt.qtl broadcastIntent}}) changed bounds; rebatching\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:rotationForOrientationLw(orient=1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Application requested orientation 1, got rotation 0 which has compatible metrics\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=166121161, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=166121161, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=264232593, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261849942, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261849949, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10113}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=508 mask=ffffffff oldVal=40000500 newVal=508 diff=40000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x508, SystemUiVisibility=0x508\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Bad activity token: android.os.BinderProxy@2bd79ce\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping AppWindowToken{9f4ef63 token=Token{a64f992 ActivityRecord{de9231d u0 com.tencent.qt.qtl/.activity.info.NewsDetailXmlActivity t761}}} -- going to hide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10113}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000500 mask=ffffffff oldVal=508 newVal=40000500 diff=40000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261850777, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:schedulePeek\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getRingtonePlayer...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getRingtonePlayer...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:196.0, previousNotificationEnd:0.0, newYTranslation:-196.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-529\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:180, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-529.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000600 mask=ffffffff oldVal=40000500 newVal=40000600 diff=300 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000600, SystemUiVisibility=0x40000600\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onExpandingStarted\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:onTrackingStarted\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:146.0, previousNotificationEnd:0.0, newYTranslation:-146.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-479\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:130, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-479.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:119.0, previousNotificationEnd:0.0, newYTranslation:-119.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-452\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:103, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-452.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:85.0, previousNotificationEnd:0.0, newYTranslation:-85.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-418\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:69, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-418.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:46.0, previousNotificationEnd:0.0, newYTranslation:-46.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-379\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:30, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-379.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:5.0, previousNotificationEnd:0.0, newYTranslation:-5.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-338\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-338.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-293.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-250.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onTouchEvent::1, x=296.0, y=327.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:flingToHeight: vel=2849.079, expand=true, target=553.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:onTrackingStopped: true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-240.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-200.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-168.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-139.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-113.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-90.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-72.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-55.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-40.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-29.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-19.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-11.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-6.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-2.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-1.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onExpandingFinished\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Sending non-protected broadcast com.android.systemui.statusbar.visible.change from system 2227:com.android.systemui/u0a37 pkg com.android.systemui\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:registerCallback not in UI.\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:android.util.AndroidRuntimeException: Must execute in UI\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:*** register callback for com.android.systemui.statusbar.policy.KeyguardMonitor@712d093\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:registerCallback not in UI.\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:android.util.AndroidRuntimeException: Must execute in UI\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 retVal=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261851646, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=0, id[0]=0, x[0]=317.0, y[0]=419.0, toolType[0]=TOOL_TYPE_FINGER, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=261851646, downTime=261851646, deviceId=3, source=0x1002 }, mBlockTouches=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onInterceptTouchEvent MotionEvent { action=ACTION_UP, actionButton=0, id[0]=0, x[0]=317.0, y[0]=419.0, toolType[0]=TOOL_TYPE_FINGER, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=261851713, downTime=261851646, deviceId=3, source=0x1002 }, mBlockTouches=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=2, force=true, delayed=true, mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onExpandingStarted\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:START u0 {act=com.tencent.mobileqq.action.MAINACTIVITY flg=0x14000000 cmp=com.tencent.mobileqq/.activity.SplashActivity (has extras)} from uid 10111 on display 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:ActivityRecord info: ActivityInfo{d1c8e63 com.tencent.mobileqq.activity.SplashActivity}, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000500 mask=ffffffff oldVal=40000600 newVal=40000500 diff=300 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10111}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationClick called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:cancelNotification,cancelNotificationLocked,callingUid = 10037,callingPid = 2227\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:cancelNotificationLocked called,tell the app,reason = 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationLocked:0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationLocked,remove =com.tencent.mobileqq\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-6.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-21.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-43.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21085], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-70.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-102.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-139.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-178.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-222.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-270.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:removeNotification:0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-321.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:95.0, previousNotificationEnd:0.0, newYTranslation:-95.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-428\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:79, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-428.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=508 mask=ffffffff oldVal=40000500 newVal=508 diff=40000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x508, SystemUiVisibility=0x508\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=508 newVal=508 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:154.0, previousNotificationEnd:0.0, newYTranslation:-154.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-487\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:138, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-487.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:213.0, previousNotificationEnd:0.0, newYTranslation:-213.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-546\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:197, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-546.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onExpandingFinished\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Sending non-protected broadcast com.android.systemui.statusbar.visible.change from system 2227:com.android.systemui/u0a37 pkg com.android.systemui\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =121\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =119\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =122\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=508 newVal=508 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000500 mask=ffffffff oldVal=508 newVal=40000500 diff=40000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:makeExpandedInvisible: mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =123\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10111}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =129\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =135\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =140\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =144\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =193\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:registerCallback not in UI.\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:android.util.AndroidRuntimeException: Must execute in UI\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:*** unregister callback for com.android.systemui.statusbar.policy.KeyguardMonitor@712d093\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Destroying surface Surface(name=com.tencent.qt.qtl/com.tencent.qt.qtl.activity.main.MainTabActivity) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.AppWindowToken.notifyAppStopped:400 com.android.server.wm.WindowManagerService.notifyAppStopped:4869 com.android.server.am.ActivityStack.activityStoppedLocked:1393 com.android.server.am.ActivityManagerService.activityStopped:7690\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Start dump, calling from : pid=12782, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:acquire lock=237091223, flags=0x1, tag=\"WiredAccessoryManager\", name=android, ws=null, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:setWiredDeviceConnectionState  type: -2147483632  state: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=86152250, flags=0x1, tag=\"handleAudioEvent\", name=android, ws=null, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:setWiredDeviceConnectionState  type: 4  state: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=237091223, flg=0x0, tag=\"WiredAccessoryManager\", name=android\", ws=null, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:ActivityManagerService,attachApplication,callingPid = 12787\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:acquire lock=219829192, flags=0x1, tag=\"AudioMix\", name=audioserver, ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=86152250, flg=0x0, tag=\"handleAudioEvent\", name=android\", ws=null, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:isBluetoothA2dpOn...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:isBluetoothScoOn...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 2\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 3\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 4\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 5\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 6\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 7\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getLastAudibleStreamVolume  treamType: 8\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12025\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 12025, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 12025, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setSpeakerphoneOn  on: true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setSpeakerphoneOn on:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=219829192, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:sending alarm Alarm{aa90550 type 3 when 509142332 PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = 0,listenerTag =time_tick\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:scheduleTimeTickEvent triggerAtTime = 509202333\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:received broadcast android.intent.action.TIME_TICK\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:handleTimeUpdate\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261866434, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261867236, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261867854, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261868506, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:9b04807) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261870094, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261870612, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:d76a91d) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:9b04807) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261871547, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261872249, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=60373518, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261872817, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=60373518, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261874138, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261875239, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261879585, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:d76a91d) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:9b04807) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261880856, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261881405, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261883596, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261884464, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261885300, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261885816, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261886520, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261887070, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:9b04807) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:sending alarm Alarm{19069ff type 3 when 509169377 PendingIntent{50303cc: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}},repeatInterval = 0,listenerTag =null\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 5784\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 5784, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 5784, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 23484\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 23484, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 23484, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 5769\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 5769, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 5769, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:sending alarm Alarm{c1705d3 type 3 when 509202333 PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = 0,listenerTag =time_tick\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:scheduleTimeTickEvent triggerAtTime = 509262332\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:received broadcast android.intent.action.TIME_TICK\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:handleTimeUpdate\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=134680583, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:remove(PendingIntent{e4e2534: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}) changed bounds; rebatching\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=134680583, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=134680583, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=134680583, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=134680583, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Unable to start service Intent { act=com.tencent.android.tpush.action.keepalive cmp=com.qqgame.hlddz/com.tencent.android.tpush.service.XGPushService } U=0: not found\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=120758482, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=120758482, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=120758482, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=120758482, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=120758482, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=120758482, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:acquire lock=120758482, flags=0x1, tag=\"RILJ_ACK_WL\", name=com.android.phone, ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:release:lock=120758482, flg=0x0, tag=\"RILJ_ACK_WL\", name=com.android.phone\", ws=null, uid=1001, pid=2626\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:unregisterAudioFocusListener...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:abandonAudioFocus\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:[HSM] stayAwake false uid: 10111, pid: 28601\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Process com.tencent.mobileqq:qzone (pid 12236) has died\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 12236, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 12236, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:new Process app=ProcessRecord{6eaaf00 0:com.tencent.mobileqq:qzone/u0a111}, name: com.tencent.mobileqq:qzone, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Start proc 13003:com.tencent.mobileqq:qzone/u0a111 for service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:ActivityManagerService,attachApplication,callingPid = 13003\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261949797, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261949805, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=InputMethod) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementInner:517 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementLoop:291 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacement:233 com.android.server.wm.WindowManagerService$H.handleMessage:8670 android.os.Handler.dispatchMessage:105\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=4 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261950783, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261950787, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261950887, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261950909, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21000], maxLayer:[21080], inRotation:[false], rot:[0]\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=708 mask=ffffffff oldVal=40000500 newVal=708 diff=40000208 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x708, SystemUiVisibility=0x708\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=c0000700 mask=ffffffff oldVal=708 newVal=c0000700 diff=c0000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0xc0000700, SystemUiVisibility=0xc0000700\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:ActivityManagerService,attachApplication,callingPid = 13094\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Destroying surface Surface(name=com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.AppWindowToken.notifyAppStopped:400 com.android.server.wm.WindowManagerService.notifyAppStopped:4869 com.android.server.am.ActivityStack.activityStoppedLocked:1393 com.android.server.am.ActivityManagerService.activityStopped:7690\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10027 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 13094\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, pid: 13094, restart: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecordLocked, reset pid: 13094, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =121\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =119\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:enqueueNotificationInternal: pkg=com.tencent.mobileqq id=121 notification=Notification(pri=1 contentView=null vibrate=[100] sound=null tick defaults=0x0 flags=0x11 color=0x00000000 vis=PRIVATE)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:enqueueNotificationInternal: n.getKey = 0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getRingerMode...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:addNotification key=0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Marking notification as seen 0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationExpansionChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-429.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261961476, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.example.android.notepad/.NotePadActivity bnds=[8,820][184,1011]} from uid 10057 on display 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:ActivityRecord info: ActivityInfo{f39182 com.example.android.notepad.NotePadActivity}, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10020}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Application requested orientation -1, got rotation 0 which has compatible metrics\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=80000608 mask=ffffffff oldVal=c0000700 newVal=80000608 diff=40000108 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x80000608, SystemUiVisibility=0x80000608\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000600 mask=ffffffff oldVal=80000608 newVal=40000600 diff=c0000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000600, SystemUiVisibility=0x40000600\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10020}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261963848, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:164.0, previousNotificationEnd:0.0, newYTranslation:-164.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-497\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:148, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:ACTIVITY check resid: com.example.android.notepad, size=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:220.0, previousNotificationEnd:0.0, newYTranslation:-220.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-553\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:204, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-553.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:makeExpandedInvisible: mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261967011, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:6ac503e) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.WindowStateAnimator.finishExit:590 com.android.server.wm.WindowStateAnimator.stepAnimationLocked:516 com.android.server.wm.WindowAnimator.updateWindowsLocked:311 com.android.server.wm.WindowAnimator.animateLocked:738\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261968328, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261968928, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261969446, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261970966, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:ActivityManagerService,attachApplication,callingPid = 13175\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=InputMethod) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementInner:517 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementLoop:291 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacement:233 com.android.server.wm.WindowManagerService$H.handleMessage:8670 android.os.Handler.dispatchMessage:105\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:ACTIVITY check resid: com.example.android.notepad, size=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000000 mask=ffffffff oldVal=40000600 newVal=40000000 diff=600 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000000, SystemUiVisibility=0x40000000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000600 mask=ffffffff oldVal=40000000 newVal=40000600 diff=600 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000600, SystemUiVisibility=0x40000600\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261972153, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261972159, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261972223, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261972262, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:rotationForOrientationLw(orient=1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Application requested orientation 1, got rotation 0 which has compatible metrics\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=708 mask=ffffffff oldVal=40000600 newVal=708 diff=40000108 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x708, SystemUiVisibility=0x708\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.example.android.notepad/com.example.android.notepad.NoteEditor}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=c0000700 mask=ffffffff oldVal=708 newVal=c0000700 diff=c0000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0xc0000700, SystemUiVisibility=0xc0000700\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=com.example.android.notepad/com.example.android.notepad.NoteEditor) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.AppWindowToken.notifyAppStopped:400 com.android.server.wm.WindowManagerService.notifyAppStopped:4869 com.android.server.am.ActivityStack.activityStoppedLocked:1393 com.android.server.am.ActivityManagerService.activityStopped:7690\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=com.example.android.notepad/com.example.android.notepad.NoteEditor) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.AppWindowToken.notifyAppStopped:400 com.android.server.wm.WindowManagerService.notifyAppStopped:4869 com.android.server.am.ActivityStack.activityStoppedLocked:1393 com.android.server.am.ActivityManagerService.activityStopped:7690\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10020 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getRingerMode...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261973289, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261973293, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261973328, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261973352, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261973840, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.tencent.mobileqq/.activity.SplashActivity bnds=[360,820][536,1011]} from uid 10057 on display 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:ActivityRecord info: ActivityInfo{71e60ba com.tencent.mobileqq.activity.SplashActivity}, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10111}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=80000508 mask=ffffffff oldVal=c0000700 newVal=80000508 diff=40000208 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x80000508, SystemUiVisibility=0x80000508\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=80000508 newVal=80000508 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=80000508 newVal=80000508 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =121\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:cancelNotification,cancelNotificationLocked,callingUid = 10111,callingPid = 28601\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:cancelNotificationLocked called,tell the app,reason = 8\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationLocked:0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =119\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationLocked,remove =com.tencent.mobileqq\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =122\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=40000500 mask=ffffffff oldVal=80000508 newVal=40000500 diff=c0000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x40000500\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =123\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =129\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =135\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =140\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:removeNotification:0|com.tencent.mobileqq|121|null|10111\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =144\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10111}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:cancelNotificationWithTag pid 28601,uid = 10111,tag = null,pkg =com.tencent.mobileqq,id =193\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:-1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261975077, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:getCellLocation is blocked by permission manager uid:10111 pid:28601\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261976180, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261976915, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation running ...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getAllCellInfo is blocked by permission manager . callingPackage = com.tencent.mobileqq\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261977717, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261978352, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261979355, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261980307, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:isMusicActive...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261980925, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261981426, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261982379, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261983047, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261983733, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261984484, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:sending alarm Alarm{d764221 type 3 when 509262332 PendingIntent{1749923: PendingIntentRecord{9600e20 android broadcastIntent}}},repeatInterval = 0,listenerTag =time_tick\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:scheduleTimeTickEvent triggerAtTime = 509322332\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:received broadcast android.intent.action.TIME_TICK\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:handleTimeUpdate\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:9b04807) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:isWiredHeadsetOn...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:acquire lock=191063310, flags=0x1, tag=\"AudioMix\", name=audioserver, ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:acquire lock=149977903, flags=0x1, tag=\"AudioMix\", name=audioserver, ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:acquire lock=155645244, flags=0x1, tag=\"AudioMix\", name=audioserver, ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:acquire lock=173466309, flags=0x1, tag=\"AudioMix\", name=audioserver, ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:setDataSource(166, 0, 576460752303423487)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getStreamVolume  treamType: 5\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261985554, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=PopupWindow:317e46) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.removeLocked:1554 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2739 com.android.server.wm.WindowManagerService.removeWindowInnerLocked:2702 com.android.server.wm.WindowManagerService.removeWindowLocked:2691 com.android.server.wm.WindowManagerService.removeWindowLocked:2560 com.android.server.wm.WindowManagerService.removeWindow:2555\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Destroying surface Surface(name=InputMethod) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementInner:517 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacementLoop:291 com.android.server.wm.WindowSurfacePlacer.performSurfacePlacement:233 com.android.server.wm.WindowManagerService$H.handleMessage:8670 android.os.Handler.dispatchMessage:105\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261986105, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261986874, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261987391, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=0, mPlugType=0, mBatteryLevel=23\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:received broadcast android.intent.action.BATTERY_CHANGED\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:ACTION_BATTERY_CHANGED AMP: 0; Volt: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateChargingLocked: charging=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:onReceive, action:android.intent.action.BATTERY_CHANGED\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:ACTION_BATTERY_CHANGED pluggedType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ApStaDisabledState what=155652\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:DefaultState what=155652\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:battery changed pluggedType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:RefreshBatteryInfo isBatteryLow: 23\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:RefreshBatteryInfo isBatteryLow: 23\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=149977903, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=155645244, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=191063310, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:release:lock=173466309, flg=0x0, tag=\"AudioMix\", name=audioserver\", ws=null, uid=1041, pid=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10091 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261988728, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down true canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261988739, event=1, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261988799, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyTq keycode=3 interactive=true keyguardActive=false policyFlags=2b000002 down false canceled false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 3 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261988822, event=0, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=0, force=false, delayed=false, mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:setSystemUiVisibility vis=0 mask=1 oldVal=40000500 newVal=40000500 diff=0 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 0, 0), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21000], maxLayer:[21080], inRotation:[false], rot:[0]\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout begin\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=708 mask=ffffffff oldVal=40000500 newVal=708 diff=40000208 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0x708, SystemUiVisibility=0x708\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=0.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setSystemUiVisibility vis=c0000700 mask=ffffffff oldVal=708 newVal=c0000700 diff=c0000008 fullscreenStackVis=0 dockedStackVis=0, fullscreenStackBounds=Rect(0, 0 - 720, 1280), dockedStackBounds=Rect(0, 0 - 0, 0)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:cancelAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:notifyUiVisibilityChanged:vis=0xc0000700, SystemUiVisibility=0xc0000700\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getRingerMode...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:release:lock=189667585, flg=0x0, tag=\"*launch*\", name=android\", ws=WorkSource{10057}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:enqueueNotificationInternal: pkg=com.tencent.mm id=4097 notification=Notification(pri=1 contentView=null vibrate=[] sound=null tick defaults=0x0 flags=0x101 color=0x00000000 category=msg vis=PRIVATE)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:enqueueNotificationInternal: n.getKey = 0|com.tencent.mm|4097|null|10112\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:updateLightsLocked,turn off notificationLight\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:addNotification key=0|com.tencent.mm|4097|null|10112\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:suspendAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:updateNotificationShade: total=0, active=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Marking notification as seen 0|com.tencent.mm|4097|null|10112\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationExpansionChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Destroying surface Surface(name=com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity) called by com.android.server.wm.WindowStateAnimator.destroySurface:2060 com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:913 com.android.server.wm.WindowState.destroyOrSaveSurface:2201 com.android.server.wm.AppWindowToken.destroySurfaces:374 com.android.server.wm.AppWindowToken.notifyAppStopped:400 com.android.server.wm.WindowManagerService.notifyAppStopped:4869 com.android.server.am.ActivityStack.activityStoppedLocked:1393 com.android.server.am.ActivityManagerService.activityStopped:7690\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-429.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getTasks: caller 10111 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:sending alarm Alarm{2741459 type 3 when 509267844 PendingIntent{f75f81e: PendingIntentRecord{e204f60 com.android.phone broadcastIntent}}},repeatInterval = 0,listenerTag =null\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Releasing suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:userActivityNoUpdateLocked: eventTime=261991304, event=2, flags=0x0, uid=1000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=0, id[0]=0, x[0]=622.0, y[0]=86.0, toolType[0]=TOOL_TYPE_FINGER, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=261991304, downTime=261991304, deviceId=3, source=0x1002 }, mBlockTouches=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-497.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onInterceptTouchEvent MotionEvent { action=ACTION_UP, actionButton=0, id[0]=0, x[0]=622.0, y[0]=86.0, toolType[0]=TOOL_TYPE_FINGER, buttonState=0, metaState=0, flags=0x0, edgeFlags=0x0, pointerCount=1, historySize=0, eventTime=261991368, downTime=261991304, deviceId=3, source=0x1002 }, mBlockTouches=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:playSoundEffect   effectType: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:querySoundEffectsEnabled...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:animateCollapsePanels:flags=2, force=true, delayed=true, mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread start\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationVisibilityChanged called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:START u0 {flg=0x24000000 cmp=com.tencent.mm/.ui.LauncherUI (has extras)} from uid 10112 on display 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:ActivityRecord info: ActivityInfo{80c2e70 com.tencent.mm.ui.LauncherUI}, euid: 0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:220.0, previousNotificationEnd:0.0, newYTranslation:-220.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-553\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:204, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-553.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:makeExpandedInvisible: mExpandedVisible=true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:instantCollapse\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:cancelPeek: false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:updateNotificationShade: total=1, active=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:removeNotificationChildren\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg=0x24000000 cmp=com.tencent.mm/.ui.LauncherUI (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:resumeSuspendedAutohide\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:overlapAmount:220.0, previousNotificationEnd:0.0, newYTranslation:-220.0, location:4, i:0, getTopPadding:333.0, getLocationOnScreen():-553\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:204, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:true, getTopPadding=333.0, Translation=-553.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:true\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:makeExpandedInvisible: mExpandedVisible=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:acquire lock=189667585, flags=0x1, tag=\"*launch*\", name=android, ws=WorkSource{10112}, uid=1000, pid=1702\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:ready=true,policy=3,wakefulness=1,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=38,auto=-1,adj=0.0userId=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Acquiring suspend blocker \"PowerManagerService.WakeLocks\".\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:onNotificationClick called\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:cancelNotification,index:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10113 does not hold REAL_GET_TASKS; limiting output\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10800000 cmp=com.tencent.qqmusic/.business.lockscreen.LockScreenActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=com.android.contacts.action.CHOOSE_SUB dat=tel:xxxxxxxxxxx flg=0x10808000 cmp=com.android.contacts/.ChooseSubActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=20,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x10804000 cmp=com.android.systemui/.recents.RecentsActivity bnds=[264,444][920,908] }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRecentTasks: num=10,flags=62,totalTasks=46\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI}\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:updateClipping isOverlap:false, getTopPadding=333.0, Translation=-24.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:updateDimmedActivatedHideSensitive overlap:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessOut =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:Animating brightness: target=38, rate=200\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:visible is system.time.showampm\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: <START> shouldBlockLocation ret:<*> <END>\n\n<prompt>:shouldBlockLocation  ret:false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: <START> interceptKeyBeforeQueueing: key <*> , result : <*> <END>\n\n<prompt>:interceptKeyBeforeQueueing: key 4 , result : 1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: <START> <*>: <*> cannot be cast to <*>$Token <END>\n\n<prompt>:java.lang.ClassCastException: android.os.BinderProxy cannot be cast to com.android.server.am.ActivityRecord$Token\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: <START> *** unregister callback for <*> <END>\n\n<prompt>:*** unregister callback for null\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:isSimPinSecure mSimDatas is null or empty\n<extraction>: <START> isSimPinSecure mSimDatas is <*> or empty <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: <START> flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*> <END>\n\n<prompt>:flingToHeight: vel=0.0, expand=false, target=0.0, collapseSpeedUpFactor=1.0, expandBecauseOfFalsing=false\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getNeighboringCellInfo calling app is com.amap.android.ams\n<extraction>: <START> getNeighboringCellInfo calling app is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:The change in focus caused us to need to do a layout end\n<extraction>: <START> The change in focus caused us to need to do a layout end <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:closeQs\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:closeQs\n<extraction>: <START> closeQs <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: <START> disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings > <END>\n\n<prompt>:disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:[PhoneIntfMgr] getDataEnabled: subId=1 phoneId=1\n<extraction>: <START> [PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: <START> getDevicesForStream streamType: <*> <END>\n\n<prompt>:getDevicesForStream  streamType: 3\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:setLightsOn(true)\n<extraction>: <START> setLightsOn(<*>) <END>\n\n<prompt>:getMode...\n<extraction>: <START> getMode... <END>\n\n<prompt>:getMode...\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:visible is system.time.showampm\n<extraction>: <START> visible is <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: <START> Pid:<*> MediaPlayer destructor <END>\n\n<prompt>:Pid:28601 MediaPlayer destructor\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Skipping, withExcluded: false, tr.intent:Intent { flg=0x18800000 cmp=com.tencent.mm/.plugin.base.stub.WXEntryActivity (has extras) }\n<extraction>: <START> Skipping, withExcluded: <*>, tr.intent:Intent { flg=<*> cmp=<*> (has extras) } <END>\n\n<prompt>:Received TIME_TICK alarm; rescheduling\n<extraction>: <START> Received TIME_TICK alarm; rescheduling <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: <START> Scheduling restart of crashed service <*> in <*> <END>\n\n<prompt>:Scheduling restart of crashed service com.tencent.mobileqq/cooperation.qzone.remote.logic.QzoneWebPluginProxyService in 1000ms\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:logNotificationVisibilityChanges runInThread over\n<extraction>: <START> logNotificationVisibilityChanges runInThread over <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:applyOptionsLocked: Unknown animationType=0\n<extraction>: <START> applyOptionsLocked: Unknown animationType=<*> <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: <START> rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED <END>\n\n<prompt>:rotationForOrientationLw(orient=-1, last=0); user=0 USER_ROTATION_LOCKED\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:onTouchEvent::0, x=271.0, y=14.0\n<extraction>: <START> onTouchEvent::<*>, x=<*>, y=<*> <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: <START> Taking screenshot from Surface with crop:[Rect(<*>, <*> - <*>, <*>)], width:[<*>], height:[<*>], minLayer:[<*>], maxLayer:[<*>], inRotation:[<*>], rot:[<*>] <END>\n\n<prompt>:Taking screenshot from Surface with crop:[Rect(0, 48 - 720, 1208)], width:[432], height:[696], minLayer:[21080], maxLayer:[21085], inRotation:[false], rot:[0]\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:state.clipTopAmount:-1, i:0\n<extraction>: <START> state.clipTopAmount:<*>, i:<*> <END>\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: <START> ChargingSpeed Wattage: <*> ST: <*> --> <*> <END>\n\n<prompt>:ChargingSpeed  Wattage: -1 ST: 5000000 --> 7500000\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:HBM brightnessIn =38\n<extraction>: <START> HBM brightnessIn =<*> <END>\n\n<prompt>:mHeadsUpExistenceChangedRunnable\n<extraction>: <START> mHeadsUpExistenceChangedRunnable <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: <START> handleBatteryUpdate <END>\n\n<prompt>:handleBatteryUpdate\n<extraction>: ",
    "For each log after <prompt> tag, extract one log template(substitute variable tokens in the log as <*> and remain constant tokens to construct the template)and put the template after <extraction> tag and between <START> and <END> tags.\n\n\n<prompt>:Killing 23484:com.android.calendar/u0a13 (adj 906): empty for 1810s\n<extraction>: <START> Killing <*> (adj <*>): empty for <*> <END>\n\n<prompt>:cleanUpApplicationRecord -- 12236\n<extraction>: <START> cleanUpApplicationRecord -- <*> <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: <START> getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output <END>\n\n<prompt>:getRunningAppProcesses: caller 10112 does not hold REAL_GET_TASKS; limiting output\n<extraction>: "
]